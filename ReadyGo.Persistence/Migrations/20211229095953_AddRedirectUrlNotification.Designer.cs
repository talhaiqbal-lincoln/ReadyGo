// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyGo.Persistence;

namespace ReadyGo.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211229095953_AddRedirectUrlNotification")]
    partial class AddRedirectUrlNotification
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransferId");

                    b.ToTable("AssignStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("TemporaryAssignedTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("AssignedRoute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c93"),
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Name = "Category0",
                            Position = 0
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Name = "Category1",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Name = "Category2",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Name = "Category3",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Name = "Category4",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Name = "Category5",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Name = "Category6",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Name = "Category7",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Name = "Category8",
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Name = "Category9",
                            Position = 9
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df802ea6-ffec-45b1-85e0-a6dd74c8bea4"),
                            ConfigKey = "Sales Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("26c69ac9-68cd-4f80-83a8-979770f3a826"),
                            ConfigKey = "Sales Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("64f495e3-8fa4-498e-b825-f8df85857e76"),
                            ConfigKey = "Sales Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("300a3996-9801-4e9d-9fb3-048ac824589f"),
                            ConfigKey = "Marketing Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("823f8343-acfc-4bf2-90de-6ec2d4bbf427"),
                            ConfigKey = "Marketing Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("e1a248ed-6925-4252-95c5-a97982987508"),
                            ConfigKey = "Marketing Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("6d8f467b-a509-4556-b6c3-3327e1782709"),
                            ConfigKey = "SalesManager_DiscountThrashHold",
                            Value = "5"
                        },
                        new
                        {
                            Id = new Guid("2581015c-adb0-4a25-932e-89c9807903a3"),
                            ConfigKey = "MarketingManager_DiscountThrashHold",
                            Value = "10"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.HasIndex("RouteId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Address1 = "KarachiKarachi",
                            Balance = 0.0,
                            City = "Karachi",
                            CreatedAt = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Email = "order@customer.com",
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "Customer",
                            PhoneNumber = "1234567890",
                            Province = "Karachi",
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.DeliveryReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("DeliverReports");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductID");

                    b.HasIndex("RouteId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.EmailSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MailConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnableSSL = true,
                            SmtpEmailAddress = "Lighthousetestmail@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "ReadyGoWebApp1",
                            SmtpPort = 587
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            ConcurrencyStamp = "cb18ab3a-3287-4058-af1e-a845389e7248",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "1570902e-48bb-4b03-850c-8ebd63261e33",
                            ConcurrencyStamp = "924fd3a6-bcb3-42d9-b233-44cb35adc290",
                            Name = "Marketing Manager",
                            NormalizedName = "Marketing Manager"
                        },
                        new
                        {
                            Id = "4ce95b9b-0760-4f11-b576-71dfaa053e74",
                            ConcurrencyStamp = "2f31be46-879c-4b73-9d57-c7ced4ddd77f",
                            Name = "Sales Manager",
                            NormalizedName = "Sales Manager"
                        },
                        new
                        {
                            Id = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            ConcurrencyStamp = "827f16d9-7145-407a-b792-0d52d8d837a7",
                            Name = "Sales Person",
                            NormalizedName = "Sales Person"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("InviteTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileImageId")
                        .IsUnique()
                        .HasFilter("[ProfileImageId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "569411c1-88ef-45b6-ab57-79665fbcd9a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "c505c9af-3c16-4de9-b1d3-37cdeed755db",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Super",
                            IsActive = true,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBLjouNqaeiVWbN0TbXUS3+ChW3d7aQIk/BQEkWBxlrdRRngp14b0BIH0Rp65qD6mA==",
                            PhoneNumberConfirmed = true,
                            RoleId = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            SecurityStamp = "edb90e6d-28a8-4c5e-a756-934b2bb51afe",
                            TwoFactorEnabled = false,
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = "0daec62b-312f-4016-9c5e-a15354259c90",
                            AccessFailedCount = 0,
                            Address1 = "LahoreLahore",
                            City = "Lahore",
                            ConcurrencyStamp = "0a4b3f53-e0bf-4e73-9ae2-260528dac66f",
                            Email = "order@sp.com",
                            EmailConfirmed = true,
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "SalesPerson",
                            LockoutEnabled = false,
                            PhoneNumber = "0900786012",
                            PhoneNumberConfirmed = false,
                            Province = "lahore",
                            RoleId = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            SecurityStamp = "405b2a95-ce5a-4bbf-befa-c34a572c9eb3",
                            TwoFactorEnabled = false,
                            UserName = "order@sp.com"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.ToTable("LogInformation");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("RedirectUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByid");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalFor")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            ApprovalFor = 0,
                            CreatedAt = new DateTime(2021, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Discount = 0f,
                            DriverName = "Zeeshan",
                            IsMarked = false,
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Status = 0,
                            Total = 0.0,
                            VehicleId = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c97"),
                            Discount = 0f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentBalance")
                        .HasColumnType("float");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double>("NewBalance")
                        .HasColumnType("float");

                    b.Property<string>("PaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentReceived")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a0"),
                            CurrentBalance = 1000.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = false,
                            NewBalance = 500.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        },
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a1"),
                            CurrentBalance = 500.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = true,
                            NewBalance = 0.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceHistory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("486b7057-8913-4b9b-b843-2faad5057bd9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("0bf81d42-0855-47c3-babf-66ffb6732616"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("c0dee154-0406-40ab-97ee-f8d37d746e6d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("69f3496e-2902-4990-bffc-d155bba645f1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("dd2aad0e-6542-49dd-aee1-14d496cabf70"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("52059d70-5e3d-4993-8511-eb6487c780fb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 25f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("af1dc674-9f4e-4b02-96b2-3b86ab34456b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("f3dea9d4-0966-4d44-8863-7a75e1a77386"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 35f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("99fa00ab-9ead-447c-ace7-c5222e38ef68"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 40f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("023e1c73-a680-4fc9-9ce9-691c5d73b3bc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 45f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("afecdf7e-24ef-4fa3-9c38-80236293bebb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("b07851d7-e1b5-46a9-a2fa-cf9d08ba8404"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 55f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("879d5e3b-6bf4-450a-af30-342794c80325"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("72c24995-3dc8-4785-9070-52e0cc029808"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 65f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("201bfb84-6f65-4d55-95e1-ccbc9063c612"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 70f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("d6c3d83b-eee5-41dd-a86b-6e80b02c9871"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 75f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("4b2f488e-1390-4463-a2e8-91b720f077f7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("bf63b78c-9538-4865-9ba5-4edf5d5dbdb0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 85f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("b503e669-3921-41ce-894b-5107332120f0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 90f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("90f8c650-823d-4aea-9839-49c7fd057da6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 95f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("98a17518-8c2f-43f1-96ef-b985470ca677"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 100f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("81d30afd-b9c3-4d86-a098-f886ff04da1a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 105f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("8115e4b5-352a-40e7-b797-daa1dc2608a5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 110f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("2516ca6e-a28e-43c9-a32f-bc826bedf8cd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 115f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("41a77ef5-89dc-4a3e-9256-ea59501e33a6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 120f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("d5e3a800-1061-4e97-9abc-7438018cd9b2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 125f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("1fabc669-4b63-446e-bab2-9e459188813b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 130f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("c6f8571f-34da-4b92-b74e-957ef49269a8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 135f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("3853c57f-b083-4666-80ee-72385845d6f6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 140f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("fa70d94c-878a-46b0-8921-54109e6065f5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 145f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("9a411a39-8990-4b23-9e7c-cebc4309552c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 150f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("ed55a1a9-295c-4690-a0cc-bb01f6deb260"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 155f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("9bee4481-aea6-4d2e-bbd8-4f829752da8c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 160f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("afce2883-867e-479e-90e1-82fca53ced80"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 165f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("39cb0a9f-bb80-456d-b4ae-bdeda649d00a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 170f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("6bcf6c69-ea57-4172-88d3-491acfe4656b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 175f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("9456c9b8-021a-4681-99a6-f082e888e17f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 180f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("61931fc5-3b26-4aa8-a256-be77a4cc0e0e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 185f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("e15e3b87-46bd-4703-9f72-240ad12d6ef7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 190f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("3b72cad8-89cd-459c-85d0-c4e6032a01f5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 195f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("fcf5ff80-2c6c-4494-a2fb-60e17ab9683b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 200f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("5cdd3349-3d48-43f7-bcf0-d51c5eacd22e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 205f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("42e03742-be38-4dd7-8be2-b82ac69b9b29"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 210f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("68d40a76-63d9-4fd3-9515-36a6829ad3d4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 215f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("f7a3d5c6-5ebc-4840-b15b-1cb7ca3d1bf8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 220f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("238b9f57-4540-4a0f-8ea8-c40dc9a26d6d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 225f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("dc851df8-8923-419d-9800-2551c8590615"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 230f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("6b4010be-2ea6-4155-8f2f-345ef2496ca7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 235f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("97cda86d-20c9-4b6a-bfb2-60434742970a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 240f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("c5ecbbe3-25ad-43f9-b853-c50d64c4ec43"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 245f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("66bbac63-fc62-469d-ac58-5db8520d9f7b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 250f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("040ee22b-4432-4084-ac78-ee3014740ef3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 255f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("debbb6de-f0b7-4d20-9a8f-79c610dcae31"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 260f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("94e0cc7e-36c4-48ad-8842-bc4b4db37ceb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 265f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("7ec26496-d378-4ac3-8681-bd2b2cfd92ee"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 270f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("34edd3d3-22ce-449f-8dd7-816da8893b32"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 275f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("2ebf57ab-6b8a-4fac-b7e6-31d5e5d23e53"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 280f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("770b2d3e-4124-4272-b85d-a063e465ff7b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 285f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("4612d22c-cb52-49c4-8368-09ad775bb069"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 290f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("9e366dc9-9c15-4afd-9219-929c6feb8e49"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 295f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("bea96885-a46b-427d-9b61-432ec96a19a1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 300f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("b1eaeb20-b73b-4bb1-b19c-d1c3c9a3899c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 305f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("9257f151-ee12-400d-8933-f9297cf13b3c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 310f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("0c0752b3-6b67-4489-8239-8674ccc9365f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 315f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("17e7a932-c099-4f68-8b2b-e3713a38b3c7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 320f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("e680086e-c15c-47be-acda-3281d504113c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 325f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("1a80a91b-5261-4770-9aaf-58f91679f74a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 330f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("53e404c4-98b0-4af4-9b9b-8a17f9ae476a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 335f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("0c734c5e-dc60-498d-b018-271f521867ba"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 340f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("3fa912bb-2277-4dd7-ad61-c806fc9ca9c0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 345f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("fd199a02-adf9-494d-91a8-4a1260a46907"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 350f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("684e057a-3efa-41b7-8fef-009dc31aae23"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 355f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("552870e3-5721-4c42-9f5e-1f7964b68af8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 360f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("e94d48df-ea3b-4aeb-8a8e-ca29a8ce1f15"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 365f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("a401d304-0ff2-469b-857e-b5b5a6d6dff3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 370f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("1c8c9e73-2aca-4958-8a34-f01644477adb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 375f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("b6555acc-57fc-464c-b02b-f186e078a346"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 380f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("f0f7564b-f11e-4b04-9696-550f99c48e56"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 385f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("f36835ec-68fe-4b32-bec5-9c8dd6efebd3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 390f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("185de793-9719-487d-b739-998c92428841"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 395f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("61518965-8f76-435d-987f-6c9329283957"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 400f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("0d3201b0-fae8-4bff-bb4b-f53e4416aa8a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 405f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("9bf0af4c-d8de-4902-8ece-73f395dc1c84"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 410f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("8e2f6281-2ffb-4b24-81fe-2861da1d8625"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 415f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("00106df5-f3fe-4af7-bcd5-80d7d0ad6a02"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 420f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("0b39658d-db15-426c-9d03-b93c1a5edcce"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 425f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("83d3ee22-dd1f-498f-a116-47030fe14308"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 430f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("04de2574-4bc7-42ae-8653-e5cc59e585b8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 435f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("ffcd7fbe-cfeb-4135-b911-43de4c04336d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 440f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("c8798748-fa2b-4084-b22a-6ab47b9a518f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 445f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("5b0b5c9e-f92f-469a-8af9-df1765ca8ffb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 450f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("2287714b-8367-4f50-8a1c-5b36aa141350"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 455f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("1232f8bd-6364-41b2-9e49-291140f1e64f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 460f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("fbfe1362-bbd8-4956-aa0a-e4131af10fd3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 465f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("04820c30-6def-4b90-a68a-20917c191c8d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 470f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("219b4bcf-757f-4e54-987c-fd318be2f854"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 475f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("e7ce3bd4-7d59-4bcb-bac1-712a7fdacdd1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 480f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("1564baa8-2637-434f-9d47-1a6ba99c9f76"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 485f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("945e0d5d-48ae-4db0-baf7-c960b5c3e01c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 490f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("c161f267-3247-4572-9d00-4d3e5838beb5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 495f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("07c9efe2-563c-4e8e-a8bc-43a2cd07d4b3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 500f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("1e99b7b2-a33b-407f-8b7c-db02361e919f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 505f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("152f1ecc-9b12-43aa-a5fe-ce4d378478a0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 510f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("91210706-e04a-47ff-bf69-57fdb3750ad3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 515f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("27a22adc-d419-4e44-87e1-0bcece19ec13"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 520f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("dd00a703-3c39-4659-b23a-8d4fc2f1c13c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 525f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("a1ca62f2-9242-42a8-a0aa-659680bfa7ce"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 530f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("0f69a0db-9855-41af-b784-0b329e594e80"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 535f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("edec829b-5c67-4fdb-a129-1c24ac5fe651"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 540f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("fe86deda-84cd-4ed3-b417-9cc0b3bd79c5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 545f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00010",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00020",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00030",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00040",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00050",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00060",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00070",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00080",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00090",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00011",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00021",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00031",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00041",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00051",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00061",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00071",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00081",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00091",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00012",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00022",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00032",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00042",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00052",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00062",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00072",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00082",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00092",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00013",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00023",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00033",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00043",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00053",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00063",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00073",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00083",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00093",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00014",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00024",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00034",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00044",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00054",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00064",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00074",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00084",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00094",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00015",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00025",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00035",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00045",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00055",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00065",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00075",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00085",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00095",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00016",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00026",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00036",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00046",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00056",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00066",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00076",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00086",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00096",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00017",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00027",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00037",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00047",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00057",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00067",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00077",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00087",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00097",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00018",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00028",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00038",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00048",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00058",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00068",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00078",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00088",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00098",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00019",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00029",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00039",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00049",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00059",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00069",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00079",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00089",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00099",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            AxCode = "LH-10000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 0",
                            Name = "Small",
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59"),
                            AxCode = "LH-10001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 1",
                            Name = "Small",
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59"),
                            AxCode = "LH-10002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 2",
                            Name = "Small",
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59"),
                            AxCode = "LH-10003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 3",
                            Name = "Small",
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59"),
                            AxCode = "LH-10004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 4",
                            Name = "Small",
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59"),
                            AxCode = "LH-10005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 5",
                            Name = "Small",
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59"),
                            AxCode = "LH-10006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 6",
                            Name = "Small",
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59"),
                            AxCode = "LH-10007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 7",
                            Name = "Small",
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59"),
                            AxCode = "LH-10008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 8",
                            Name = "Small",
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-10009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 9",
                            Name = "Small",
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("BaseProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaseProductQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxPromoQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PromoProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("PromoProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PromoProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromoProductId");

                    b.HasIndex("RouteId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ResourceFiles");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("ReturnReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReturnOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c96"),
                            Discount = 10f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            Quantity = 10f,
                            ReturnReason = "Expired"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074260"),
                            AxCode = "RH-00000",
                            Description = "Route0 has 10 stops",
                            IsActive = true,
                            Name = "Route0",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074261"),
                            AxCode = "RH-00001",
                            Description = "Route1 has 10 stops",
                            IsActive = true,
                            Name = "Route1",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074262"),
                            AxCode = "RH-00002",
                            Description = "Route2 has 10 stops",
                            IsActive = true,
                            Name = "Route2",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074263"),
                            AxCode = "RH-00003",
                            Description = "Route3 has 10 stops",
                            IsActive = true,
                            Name = "Route3",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074264"),
                            AxCode = "RH-00004",
                            Description = "Route4 has 10 stops",
                            IsActive = true,
                            Name = "Route4",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074265"),
                            AxCode = "RH-00005",
                            Description = "Route5 has 10 stops",
                            IsActive = true,
                            Name = "Route5",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074266"),
                            AxCode = "RH-00006",
                            Description = "Route6 has 10 stops",
                            IsActive = true,
                            Name = "Route6",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074267"),
                            AxCode = "RH-00007",
                            Description = "Route7 has 10 stops",
                            IsActive = true,
                            Name = "Route7",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074268"),
                            AxCode = "RH-00008",
                            Description = "Route8 has 10 stops",
                            IsActive = true,
                            Name = "Route8",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074269"),
                            AxCode = "RH-00009",
                            Description = "Route9 has 10 stops",
                            IsActive = true,
                            Name = "Route9",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            AxCode = "RH-00011",
                            Description = "Route for Order seeding",
                            IsActive = true,
                            Name = "OrderRoute",
                            SyncedAt = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromWarehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RouteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TransferStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0"),
                            AXCode = "AX-Code0",
                            DriverName = "Driver0",
                            Model = "Model0",
                            Type = "Type0",
                            VehicleNumber = "LHR-0000"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e1"),
                            AXCode = "AX-Code1",
                            DriverName = "Driver1",
                            Model = "Model1",
                            Type = "Type1",
                            VehicleNumber = "LHR-0001"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e2"),
                            AXCode = "AX-Code2",
                            DriverName = "Driver2",
                            Model = "Model2",
                            Type = "Type2",
                            VehicleNumber = "LHR-0002"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("WasteReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("WasteOrders");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.TransferStock", "TransferStock")
                        .WithMany("AssignStocks")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("SalesPersons")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Routes")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfilePicture")
                        .WithOne("ImageCustomer")
                        .HasForeignKey("ReadyGo.Domain.Entities.Customer", "PictureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Customers")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ProfilePicture");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.DeliveryReport", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Discounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Discounts")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfileImage")
                        .WithOne("ImageUser")
                        .HasForeignKey("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ProfileImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProfileImage");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChangedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("NotificationSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Payment", "Payment")
                        .WithOne("Order")
                        .HasForeignKey("ReadyGo.Domain.Entities.Order", "PaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Orders")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Payments")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "VariantOf")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Image");

                    b.Navigation("VariantOf");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Promotions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "PromoProduct")
                        .WithMany()
                        .HasForeignKey("PromoProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Promotions")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BaseProduct");

                    b.Navigation("Customer");

                    b.Navigation("PromoProduct");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("ReturnOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Route");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Notification", "Notification")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("WasteOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("NotificationSettings");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReturnOrders");

                    b.Navigation("WasteOrders");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Prices");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Navigation("ImageCustomer");

                    b.Navigation("ImageUser");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discounts");

                    b.Navigation("Promotions");

                    b.Navigation("SalesPersons");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Navigation("AssignStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyGo.Persistence;

namespace ReadyGo.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211229062214_AddingTableShipment")]
    partial class AddingTableShipment
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransferId");

                    b.ToTable("AssignStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("TemporaryAssignedTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("AssignedRoute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c93"),
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Name = "Category0",
                            Position = 0
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Name = "Category1",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Name = "Category2",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Name = "Category3",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Name = "Category4",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Name = "Category5",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Name = "Category6",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Name = "Category7",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Name = "Category8",
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Name = "Category9",
                            Position = 9
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df802ea6-ffec-45b1-85e0-a6dd74c8bea4"),
                            ConfigKey = "Sales Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("26c69ac9-68cd-4f80-83a8-979770f3a826"),
                            ConfigKey = "Sales Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("64f495e3-8fa4-498e-b825-f8df85857e76"),
                            ConfigKey = "Sales Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("300a3996-9801-4e9d-9fb3-048ac824589f"),
                            ConfigKey = "Marketing Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("823f8343-acfc-4bf2-90de-6ec2d4bbf427"),
                            ConfigKey = "Marketing Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("e1a248ed-6925-4252-95c5-a97982987508"),
                            ConfigKey = "Marketing Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("6d8f467b-a509-4556-b6c3-3327e1782709"),
                            ConfigKey = "SalesManager_DiscountThrashHold",
                            Value = "5"
                        },
                        new
                        {
                            Id = new Guid("2581015c-adb0-4a25-932e-89c9807903a3"),
                            ConfigKey = "MarketingManager_DiscountThrashHold",
                            Value = "10"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.HasIndex("RouteId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Address1 = "KarachiKarachi",
                            Balance = 0.0,
                            City = "Karachi",
                            CreatedAt = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Email = "order@customer.com",
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "Customer",
                            PhoneNumber = "1234567890",
                            Province = "Karachi",
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductID");

                    b.HasIndex("RouteId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.EmailSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MailConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnableSSL = true,
                            SmtpEmailAddress = "Lighthousetestmail@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "ReadyGoWebApp1",
                            SmtpPort = 587
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            ConcurrencyStamp = "28f8bcd3-2551-44b5-b3bc-739079d21b7b",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "1570902e-48bb-4b03-850c-8ebd63261e33",
                            ConcurrencyStamp = "e1df8e57-e76d-4b3d-a25c-46754b4ede2c",
                            Name = "Marketing Manager",
                            NormalizedName = "Marketing Manager"
                        },
                        new
                        {
                            Id = "4ce95b9b-0760-4f11-b576-71dfaa053e74",
                            ConcurrencyStamp = "e398804c-7774-44e9-a643-b76aad4ac18c",
                            Name = "Sales Manager",
                            NormalizedName = "Sales Manager"
                        },
                        new
                        {
                            Id = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            ConcurrencyStamp = "b44e4df0-3cfb-4c58-bf53-98aeb06e8c6e",
                            Name = "Sales Person",
                            NormalizedName = "Sales Person"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("InviteTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileImageId")
                        .IsUnique()
                        .HasFilter("[ProfileImageId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "569411c1-88ef-45b6-ab57-79665fbcd9a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "5723090a-a988-4494-9a1f-90d1ab77fa77",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Super",
                            IsActive = true,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBLjouNqaeiVWbN0TbXUS3+ChW3d7aQIk/BQEkWBxlrdRRngp14b0BIH0Rp65qD6mA==",
                            PhoneNumberConfirmed = true,
                            RoleId = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            SecurityStamp = "39d80192-1c06-4fb0-9142-d2bc4bea2bd9",
                            TwoFactorEnabled = false,
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = "0daec62b-312f-4016-9c5e-a15354259c90",
                            AccessFailedCount = 0,
                            Address1 = "LahoreLahore",
                            City = "Lahore",
                            ConcurrencyStamp = "a1dc5239-99a4-4324-bbc4-5540e764715c",
                            Email = "order@sp.com",
                            EmailConfirmed = true,
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "SalesPerson",
                            LockoutEnabled = false,
                            PhoneNumber = "0900786012",
                            PhoneNumberConfirmed = false,
                            Province = "lahore",
                            RoleId = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            SecurityStamp = "b830f156-55d0-4eb0-99ce-9d7199cde28d",
                            TwoFactorEnabled = false,
                            UserName = "order@sp.com"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.ToTable("LogInformation");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByid");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalFor")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            ApprovalFor = 0,
                            CreatedAt = new DateTime(2021, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Discount = 0f,
                            DriverName = "Zeeshan",
                            IsMarked = false,
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Status = 0,
                            Total = 0.0,
                            VehicleId = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c97"),
                            Discount = 0f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentBalance")
                        .HasColumnType("float");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double>("NewBalance")
                        .HasColumnType("float");

                    b.Property<string>("PaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentReceived")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a0"),
                            CurrentBalance = 1000.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = false,
                            NewBalance = 500.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        },
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a1"),
                            CurrentBalance = 500.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = true,
                            NewBalance = 0.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceHistory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9877bc45-2d58-4aa0-803f-f842ca6661f1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("ec310c77-4ba3-4f25-9697-012ca51bb673"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("62c1ae1f-40b5-412a-8e32-23b8697385fd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("0ddb1180-b568-4305-b0b8-042b25370cfe"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("c8f8ce17-67ee-4627-9b5d-6effd4165acc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("e6993bd8-8e92-44b2-8776-fb0dfe3fc148"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 25f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("aadda5ea-2a2b-48b6-816a-145a14db8555"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("c552b26b-72e1-4777-a016-d31a470449c1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 35f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("8b269d97-d47d-4088-ab35-b6045636039d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 40f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("6fde772a-c8f8-4425-9989-735aedeaeb89"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 45f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("f75cf7e8-c91c-4dd4-ac44-c8bbd364742e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("60937e39-86c5-4be1-9ab1-bfe8399fb4cc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 55f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("f2715ed2-109d-4a95-bd68-9aeb350d232f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("c694b36e-319e-4b94-b3ff-65305734e0a6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 65f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("794e1c8a-e191-4078-9138-f9218738c78c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 70f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("68ce6954-61fb-44de-a89e-edf14fb72d04"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 75f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("cb50a5ba-0dc5-46a3-a55d-cd0c922300e5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("b936f08d-a189-4ae1-9d50-bf9967d6b309"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 85f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("354fbd93-4446-453c-806b-d932c818c99b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 90f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("e843c313-a7db-4836-8867-a1c15420222d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 95f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("449443ea-717f-487f-a640-460cd68cb343"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 100f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("c0eb5bc0-d437-4e85-a072-8df8a53ce3b5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 105f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("0d21f27c-fd05-4d94-bc00-0b5168c03fbb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 110f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("f3d8dbe6-aaad-4097-a8df-d3f726fe8250"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 115f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("bcd3693f-ed34-449b-a786-22a65d6ab7a0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 120f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("c452543b-765d-4fde-b7cb-d15661aa89e6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 125f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("4e476ca3-bbc3-4511-8f07-2e6ba5778eae"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 130f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("95378a4c-9ca1-489f-b9f1-eee413d76766"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 135f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("805d942a-2bd8-4d4f-99a3-a49bf3295dc4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 140f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("c0063fee-c01c-4640-a1f4-9329bf23bdb3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 145f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("baec4a99-4279-4cc2-b9cc-f3642334aeb6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 150f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("580723f7-753e-4f82-8b90-a7570c4ee8bc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 155f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("54b880c3-1158-4ea8-b45f-e6c87fdbc359"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 160f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("9f02789a-ec46-4194-ae23-c8170fa04463"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 165f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("09d6b938-07d4-42c6-85e7-0b05e286cc99"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 170f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("a675f710-a8ef-4465-9f61-efaa703bb40b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 175f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("98ea490f-fd33-4f48-be05-e2c715afecaf"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 180f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("3b162726-97b0-42b9-a292-5c26a1089859"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 185f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("2dbaa49a-ccab-4be1-bab6-81a83a224164"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 190f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("9cdb2ffa-67b3-4a0e-9ef8-a81d487a438c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 195f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("b7f082eb-59cf-4621-adc8-343df686c507"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 200f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("a057a960-d3d5-4bca-a274-62db32d5ccd1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 205f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("d0b9af78-8f77-4236-8b1e-d847c79026d1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 210f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("d22d4d97-4a18-4a6c-94cf-21196a1ee3c0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 215f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("bb447c1d-c48c-4a60-b9ce-7b7322594021"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 220f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("7119f694-6cb8-4bc3-87bb-d7cddecd056a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 225f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("a9b74bbb-8ba7-45d0-93b9-e52630cb1b2a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 230f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("f3559c1a-a581-497c-8385-ced060a661a4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 235f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("584ea3ef-57a6-4e29-8fd0-a3b031034d19"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 240f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("7e292c42-b7d7-420d-b32c-bdc5a61644a0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 245f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("a0769afa-86b8-4750-a486-4cd95fb13713"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 250f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("c2b383f1-68b5-4359-803c-8b0501bcff5d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 255f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("9f19192b-1183-427d-b7e1-53c6715ed3a1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 260f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("040c6408-06b0-4f31-a0be-7595c2ca2506"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 265f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("3be24e0a-68e9-4f5c-b003-2dd3e766618d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 270f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("d06d49bc-6afa-4ed7-a303-47b6015f9b9e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 275f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("404441e3-9add-473e-a5eb-a84ce01325ac"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 280f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("ffb5caa4-6d00-4198-9c83-d396c3ca8a85"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 285f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("dc43271f-0c20-4e0a-bfd8-a01b1a84e82b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 290f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("d6cb20e5-f7a5-47da-bc3c-ef0da4c59e84"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 295f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("3a103145-a93b-448a-95e7-9d14673a28d5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 300f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("4cfa19cf-d2d2-4e53-8cc7-bf0e486948cc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 305f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("34b7d08a-8813-4dc8-96c0-10231f9ea434"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 310f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("e47c3556-8a62-4b17-921d-cded9cfdaf35"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 315f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("30d328bc-af9a-441c-b28b-ba887df410d4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 320f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("31d08603-f650-4e3b-a620-0eb6a1346095"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 325f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("65e06954-5176-44c4-9883-fdd0615c3e28"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 330f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("66911a36-68f6-4174-8296-f0c38094139f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 335f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("dc021821-4a18-49ff-b86f-cded68413d9d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 340f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("dda10864-be37-49c8-8749-8916cec67f66"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 345f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("855e49d0-0446-418c-901e-c16d74668d2c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 350f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("799fba73-5dd9-4d48-9f89-995fe7a0c9b2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 355f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("96bd1610-2697-4e3e-a864-6239932eb57b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 360f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("cb45e458-6880-47f6-a9fa-436215323230"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 365f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("1d358b7e-00dc-4ff8-8684-8925710cf239"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 370f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("2bdeadaf-36c3-47f1-a43f-5d2f2d98c4d4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 375f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("5c0e5ca6-c991-4b57-9a73-49f6e67dc840"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 380f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("adc0f189-19fd-4f7b-9e52-f1e7e84d8a2a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 385f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("05e85c31-2d7f-409c-9d1b-90aa603a6ed3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 390f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("dbcca39f-03ed-4fe6-ae40-a3e32a86b7b6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 395f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("693b9af2-2a60-4b2c-bc50-6e08d7ca1b1b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 400f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("b46f2cb9-a6f1-4fe3-bc7e-03e894adedf7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 405f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("68bdf1dc-a8bc-4019-a337-eb152f8d83a8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 410f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("15876348-68dd-477a-90f1-dc9724853274"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 415f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("d34b67f1-e60c-4ff8-8fc1-2adfc4beb4ba"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 420f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("419bfb63-93e7-49c0-a77a-e0f8d844b902"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 425f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("efd1e744-7a80-4208-bb20-825522a75da3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 430f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("56965d30-93ba-4df8-8070-a6480b787f8b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 435f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("211ec51b-cb8c-47f3-82e9-aa4bcc1f4fbd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 440f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("f8ca23c2-652f-4d23-83a5-86a2d02f6b26"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 445f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("6b279f5a-de08-4602-b3ed-5e1d18978e6e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 450f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("b4f9129b-6ecd-4ac4-a9f5-5b5d84221fc6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 455f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("2862df21-e062-49ee-be8e-aba58af5db15"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 460f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("19717e95-ed0e-45d5-94a6-d9daaf492554"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 465f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("87a77257-1598-4f6a-a0ee-522b872ff6f1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 470f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("9b3ad1fe-e352-484f-b8f5-e2b0117af6e3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 475f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("4227f796-480f-4603-ab8c-0637f8cf86b5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 480f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("baa003f4-d119-44cf-bcd8-72efb8c727b6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 485f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("cb5d5d2f-94a6-4949-b828-b4e35c9f5e71"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 490f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("69a9f1c3-91ec-4690-af11-d878437c5d3f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 495f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("baccef74-8ef6-443d-9575-04232304cd2f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 500f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("d7553db4-0648-47eb-9ef9-e6d6a80a095f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 505f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("0ab66425-0748-451c-af3a-26d828f70737"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 510f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("265d6564-e1e4-4a0a-9057-1b5708bd7254"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 515f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("fc5e9071-80b8-4b89-9bce-6cbf4d39c2cd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 520f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("9928813a-2518-42dd-8e1c-74efe99f4cbe"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 525f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("85dd302d-8232-46e6-8165-28edc459364d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 530f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("d84ba0d4-30f5-46b5-8bcd-b7a9240a876a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 535f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("42f5068e-287f-472f-ab8a-c57c145eb44f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 540f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("7ff6de0b-437e-4956-ac02-35751e8d102f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 545f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00010",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00020",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00030",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00040",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00050",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00060",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00070",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00080",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00090",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00011",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00021",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00031",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00041",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00051",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00061",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00071",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00081",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00091",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00012",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00022",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00032",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00042",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00052",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00062",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00072",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00082",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00092",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00013",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00023",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00033",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00043",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00053",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00063",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00073",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00083",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00093",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00014",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00024",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00034",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00044",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00054",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00064",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00074",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00084",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00094",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00015",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00025",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00035",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00045",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00055",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00065",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00075",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00085",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00095",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00016",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00026",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00036",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00046",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00056",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00066",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00076",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00086",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00096",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00017",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00027",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00037",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00047",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00057",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00067",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00077",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00087",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00097",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00018",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00028",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00038",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00048",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00058",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00068",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00078",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00088",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00098",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00019",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00029",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00039",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00049",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00059",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00069",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00079",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00089",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00099",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            AxCode = "LH-10000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 0",
                            Name = "Small",
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59"),
                            AxCode = "LH-10001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 1",
                            Name = "Small",
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59"),
                            AxCode = "LH-10002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 2",
                            Name = "Small",
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59"),
                            AxCode = "LH-10003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 3",
                            Name = "Small",
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59"),
                            AxCode = "LH-10004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 4",
                            Name = "Small",
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59"),
                            AxCode = "LH-10005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 5",
                            Name = "Small",
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59"),
                            AxCode = "LH-10006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 6",
                            Name = "Small",
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59"),
                            AxCode = "LH-10007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 7",
                            Name = "Small",
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59"),
                            AxCode = "LH-10008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 8",
                            Name = "Small",
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-10009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 9",
                            Name = "Small",
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("BaseProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaseProductQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxPromoQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PromoProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("PromoProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PromoProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromoProductId");

                    b.HasIndex("RouteId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ResourceFiles");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("ReturnReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReturnOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c96"),
                            Discount = 10f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            Quantity = 10f,
                            ReturnReason = "Expired"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074260"),
                            AxCode = "RH-00000",
                            Description = "Route0 has 10 stops",
                            IsActive = true,
                            Name = "Route0",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074261"),
                            AxCode = "RH-00001",
                            Description = "Route1 has 10 stops",
                            IsActive = true,
                            Name = "Route1",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074262"),
                            AxCode = "RH-00002",
                            Description = "Route2 has 10 stops",
                            IsActive = true,
                            Name = "Route2",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074263"),
                            AxCode = "RH-00003",
                            Description = "Route3 has 10 stops",
                            IsActive = true,
                            Name = "Route3",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074264"),
                            AxCode = "RH-00004",
                            Description = "Route4 has 10 stops",
                            IsActive = true,
                            Name = "Route4",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074265"),
                            AxCode = "RH-00005",
                            Description = "Route5 has 10 stops",
                            IsActive = true,
                            Name = "Route5",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074266"),
                            AxCode = "RH-00006",
                            Description = "Route6 has 10 stops",
                            IsActive = true,
                            Name = "Route6",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074267"),
                            AxCode = "RH-00007",
                            Description = "Route7 has 10 stops",
                            IsActive = true,
                            Name = "Route7",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074268"),
                            AxCode = "RH-00008",
                            Description = "Route8 has 10 stops",
                            IsActive = true,
                            Name = "Route8",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074269"),
                            AxCode = "RH-00009",
                            Description = "Route9 has 10 stops",
                            IsActive = true,
                            Name = "Route9",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            AxCode = "RH-00011",
                            Description = "Route for Order seeding",
                            IsActive = true,
                            Name = "OrderRoute",
                            SyncedAt = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ShipmentDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromWarehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RouteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TransferStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0"),
                            AXCode = "AX-Code0",
                            Model = "Model0",
                            Type = "Type0",
                            VehicleNumber = "LHR-0000"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e1"),
                            AXCode = "AX-Code1",
                            Model = "Model1",
                            Type = "Type1",
                            VehicleNumber = "LHR-0001"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e2"),
                            AXCode = "AX-Code2",
                            Model = "Model2",
                            Type = "Type2",
                            VehicleNumber = "LHR-0002"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("WasteReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("WasteOrders");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.TransferStock", "TransferStock")
                        .WithMany("AssignStocks")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("SalesPersons")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Routes")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfilePicture")
                        .WithOne("ImageCustomer")
                        .HasForeignKey("ReadyGo.Domain.Entities.Customer", "PictureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Customers")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ProfilePicture");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Discounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Discounts")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfileImage")
                        .WithOne("ImageUser")
                        .HasForeignKey("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ProfileImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProfileImage");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChangedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("NotificationSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Payment", "Payment")
                        .WithOne("Order")
                        .HasForeignKey("ReadyGo.Domain.Entities.Order", "PaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Orders")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Payments")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "VariantOf")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Image");

                    b.Navigation("VariantOf");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Promotions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "PromoProduct")
                        .WithMany()
                        .HasForeignKey("PromoProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Promotions")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BaseProduct");

                    b.Navigation("Customer");

                    b.Navigation("PromoProduct");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("ReturnOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ShipmentDetail", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Route");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Notification", "Notification")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("WasteOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("NotificationSettings");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReturnOrders");

                    b.Navigation("WasteOrders");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Prices");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Navigation("ImageCustomer");

                    b.Navigation("ImageUser");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discounts");

                    b.Navigation("Promotions");

                    b.Navigation("SalesPersons");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Navigation("AssignStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}

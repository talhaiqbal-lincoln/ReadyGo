// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyGo.Persistence;

namespace ReadyGo.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211229121344_NullableUpdate")]
    partial class NullableUpdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransferId");

                    b.ToTable("AssignStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("TemporaryAssignedTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("AssignedRoute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c93"),
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Name = "Category0",
                            Position = 0
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Name = "Category1",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Name = "Category2",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Name = "Category3",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Name = "Category4",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Name = "Category5",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Name = "Category6",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Name = "Category7",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Name = "Category8",
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Name = "Category9",
                            Position = 9
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df802ea6-ffec-45b1-85e0-a6dd74c8bea4"),
                            ConfigKey = "Sales Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("26c69ac9-68cd-4f80-83a8-979770f3a826"),
                            ConfigKey = "Sales Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("64f495e3-8fa4-498e-b825-f8df85857e76"),
                            ConfigKey = "Sales Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("300a3996-9801-4e9d-9fb3-048ac824589f"),
                            ConfigKey = "Marketing Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("823f8343-acfc-4bf2-90de-6ec2d4bbf427"),
                            ConfigKey = "Marketing Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("e1a248ed-6925-4252-95c5-a97982987508"),
                            ConfigKey = "Marketing Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("6d8f467b-a509-4556-b6c3-3327e1782709"),
                            ConfigKey = "SalesManager_DiscountThrashHold",
                            Value = "5"
                        },
                        new
                        {
                            Id = new Guid("2581015c-adb0-4a25-932e-89c9807903a3"),
                            ConfigKey = "MarketingManager_DiscountThrashHold",
                            Value = "10"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.HasIndex("RouteId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Address1 = "KarachiKarachi",
                            Balance = 0.0,
                            City = "Karachi",
                            CreatedAt = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Email = "order@customer.com",
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "Customer",
                            PhoneNumber = "1234567890",
                            Province = "Karachi",
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.DeliveryReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("DeliveryReports");

                    b.HasData(
                        new
                        {
                            Id = new Guid("713796e0-b93c-4f50-b7a0-99f690a51638"),
                            CreatedAt = new DateTime(2021, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DriverName = "Paul Walker",
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90",
                            VehicleId = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductID");

                    b.HasIndex("RouteId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.EmailSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MailConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnableSSL = true,
                            SmtpEmailAddress = "Lighthousetestmail@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "ReadyGoWebApp1",
                            SmtpPort = 587
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            ConcurrencyStamp = "2aa5ad23-82b2-4f83-9d5d-9245b29ed48a",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "1570902e-48bb-4b03-850c-8ebd63261e33",
                            ConcurrencyStamp = "fdabf431-8204-4bbd-a6ef-ab4ad979f8cc",
                            Name = "Marketing Manager",
                            NormalizedName = "Marketing Manager"
                        },
                        new
                        {
                            Id = "4ce95b9b-0760-4f11-b576-71dfaa053e74",
                            ConcurrencyStamp = "f03aab8c-34b4-486c-b3bf-ba0440106e1f",
                            Name = "Sales Manager",
                            NormalizedName = "Sales Manager"
                        },
                        new
                        {
                            Id = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            ConcurrencyStamp = "ffbf177a-ed10-4439-8fe2-e82636775c7c",
                            Name = "Sales Person",
                            NormalizedName = "Sales Person"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("InviteTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileImageId")
                        .IsUnique()
                        .HasFilter("[ProfileImageId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "569411c1-88ef-45b6-ab57-79665fbcd9a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "cdc3b7be-c835-4679-8c29-bee0fe4750b7",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Super",
                            IsActive = true,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBLjouNqaeiVWbN0TbXUS3+ChW3d7aQIk/BQEkWBxlrdRRngp14b0BIH0Rp65qD6mA==",
                            PhoneNumberConfirmed = true,
                            RoleId = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            SecurityStamp = "29b328d5-8e49-4898-841e-8ff05eea0c92",
                            TwoFactorEnabled = false,
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = "0daec62b-312f-4016-9c5e-a15354259c90",
                            AccessFailedCount = 0,
                            Address1 = "LahoreLahore",
                            City = "Lahore",
                            ConcurrencyStamp = "cdd6af80-cceb-44a0-a0bb-672091283790",
                            Email = "order@sp.com",
                            EmailConfirmed = true,
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "SalesPerson",
                            LockoutEnabled = false,
                            PhoneNumber = "0900786012",
                            PhoneNumberConfirmed = false,
                            Province = "lahore",
                            RoleId = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            SecurityStamp = "6c5fddd7-b02c-40ac-90d0-d851620d211e",
                            TwoFactorEnabled = false,
                            UserName = "order@sp.com"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.ToTable("LogInformation");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByid");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("ApprovalFor")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<Guid?>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            ApprovalFor = 0,
                            CreatedAt = new DateTime(2021, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Discount = 0f,
                            DriverName = "Zeeshan",
                            IsMarked = false,
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Status = 0,
                            Total = 0.0,
                            VehicleId = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c97"),
                            Discount = 0f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentBalance")
                        .HasColumnType("float");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double>("NewBalance")
                        .HasColumnType("float");

                    b.Property<string>("PaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentReceived")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a0"),
                            CurrentBalance = 1000.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = false,
                            NewBalance = 500.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        },
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a1"),
                            CurrentBalance = 500.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = true,
                            NewBalance = 0.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceHistory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("227a7da3-fc25-44a5-b76b-4e9f01603835"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("d8910414-79fa-4ac6-b433-df48f20b5dfd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("db2c6e7b-1117-4d69-b590-b59cc008a9b4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("4ce39e28-8647-4783-90f9-938ff21b612f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("c8ab69dd-61ed-4509-b6b6-2ed4ee73f436"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("490e3655-3391-42ac-b30f-b1f719085e9b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 25f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("caef55cc-142f-4fd5-93b5-ee5342bd32a9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("b1a18f6f-cf1c-4d38-a13c-06a0b6dd513d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 35f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("093525be-fb5c-4c72-bee1-4ac272d04d7f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 40f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("5c72379c-b7f6-43cc-b885-1e729dd00a05"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 45f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("a6a5144f-ff47-4d29-8f8c-3cf0f5381122"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("480ba5c0-4a75-4959-99ad-1ca483c2daee"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 55f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("97434050-4df3-4914-8b34-81347a83f8c4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("09e3e7cc-f98c-4887-9926-e93047f3ab90"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 65f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("226003c9-16c5-495e-9f45-9fb1bd2440b4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 70f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("fee76815-d893-4ea6-92b7-792970fefa34"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 75f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("312362f4-618b-4577-861d-6f1ad858bd33"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("5491cb19-4797-4ab9-b1f1-919d58f292f7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 85f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("9c9eb044-3bd4-4e79-88a3-d7dd102c655b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 90f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("c4e10a28-90d3-48ae-85d0-c8e2bf73a5f5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 95f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("1c5d6ead-a776-4686-8a35-4f92052609a9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 100f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("60d9b01e-44a3-4784-a71b-7ef615c3af66"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 105f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("cf0d712b-614a-4446-a901-91a84b0f61be"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 110f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("d3f94f2d-b071-4b0e-93de-a2d83371781d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 115f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("dd5b5342-d552-41ba-b067-b02c9e209217"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 120f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("5cf37d49-4c95-488e-adec-9358e900aeca"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 125f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("733c4302-8285-429e-8489-d32f55f8ce56"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 130f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("c1aed3f3-ed50-462a-b69a-dc79dd27a903"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 135f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("a6b84ced-e2f5-4c4d-b4d7-5cfe5499929a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 140f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("8629e7b7-0d50-4e85-94d2-41e965a2dc63"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 145f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("6d86666d-1822-4586-8cd5-88b41e128b9c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 150f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("e89b63a4-678f-400b-9d2c-3e0717803fde"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 155f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("dd8b4a34-ece6-40a0-b7d4-fc747662df78"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 160f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("396fabbd-716f-4813-832d-8b177f27013c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 165f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("bc2df092-1ef8-4196-8058-b96d74681678"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 170f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("f3f9f67c-0ad4-46a3-88d7-6ac53b8b60d3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 175f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("68db7566-0b29-4a94-ad37-f581dc98cf9c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 180f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("394eb377-2be9-4702-922e-ec2f32d6a53b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 185f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("be924784-59e4-4f8d-947c-8a7b3f550a73"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 190f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("34272be5-3ac2-43fd-8b81-d0c25283cab5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 195f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("56ea4fa4-5ba3-414f-8068-50828cfc2f81"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 200f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("674adff6-b89e-4b4f-95a3-9184b1f5db87"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 205f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("5c03e49a-f270-4a0e-aa07-ad75bdb64b8f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 210f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("56924151-e7d5-4db4-9576-b64d4cd7b880"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 215f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("4787debf-604d-450d-aaf4-980a47afd195"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 220f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("2f596792-3ee2-46bb-96fe-eaf73c23760b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 225f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("3e935e44-0236-4146-9504-cb6c45201421"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 230f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("65c581b7-ece6-495b-84d1-076af7eb8ec8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 235f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("8ed348d8-8328-494f-a095-71b284a16726"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 240f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("fde9e4da-d5fa-438c-ae6f-97285a78cc98"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 245f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("edb062eb-b8e6-45a4-89aa-f7675119b236"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 250f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("a298dd3c-b454-492d-8907-c93772eb4a07"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 255f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("c3543853-aca9-4acb-85fe-a47c643e6305"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 260f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("1133e8a8-b209-4fd9-97eb-b8bb68ae8f1c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 265f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("0f64fd86-85be-41aa-a5c2-ea3895ca99ff"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 270f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("0c306f47-ae65-42e0-b35f-872fc37c883b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 275f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("aa737497-d9df-43aa-89a5-8d95556694d0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 280f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("aaac68dc-ce7b-4865-8f5d-e6b8463abaf2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 285f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("cab5b095-021a-4969-b705-9aba2e874a46"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 290f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("b2a8f871-fd42-44c1-b39e-0f2d921dad1c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 295f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("f05529d4-9e7b-407b-b2f2-1fd0e2515bb0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 300f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("77f6f69c-40b5-4b99-94b9-ffbc2684617b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 305f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("b93f63c3-06e6-4934-b94d-238cfdeb6fb3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 310f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("d4aafb26-d5e9-46cf-9d9e-19e7867eeddd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 315f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("f8dd6203-a675-4bf4-a8df-d3fc85f268cd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 320f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("b874521b-732d-4b82-810c-f3fd132c4ddb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 325f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("d15df341-54bb-4143-8045-b53a58ab440c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 330f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("69f7faea-1780-42a8-a599-ad73ca2ce920"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 335f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("67e34e92-cf00-488e-8422-2a74082a0978"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 340f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("dd40288a-131b-45e2-98d9-f301de2c8507"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 345f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("f15aa878-6b1a-44d0-82f2-07173b6f0109"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 350f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("6394c502-aacf-41c5-a845-ed26798e5a8f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 355f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("14edc4a8-ab79-422c-835f-09b007380bc3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 360f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("ed7b954b-b7c0-48f1-8c69-8087603b3dcc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 365f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("a87372f7-b23e-478a-a8a9-31b985b02593"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 370f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("856ca278-d4cb-431b-bcb7-3c4d603270be"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 375f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("87034561-6bd5-45c2-a450-d77f86e0dc93"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 380f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("d95a1782-cb2a-4a38-ba9d-23ca00745cc7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 385f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("dce66c93-2c4a-48e9-893d-e593a9c19856"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 390f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("49f6f62e-2669-48a6-b69c-5caec2e1c422"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 395f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("19ca4277-cc7d-4795-ad19-4b62d7a020ae"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 400f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("d13cfbee-6a6a-43b2-98b4-4095bc2bba81"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 405f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("8d419b19-e643-482d-b7f0-011a351070f9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 410f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("ced306ff-bc01-4421-93c2-a4ed7f9b4505"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 415f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("9677dd98-f033-47c1-9a0e-f10dd46cdcae"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 420f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("996553b5-ae51-4580-bdad-ea34d16c5136"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 425f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("ec5e4c1f-1a35-4c80-81c1-ef802b4de793"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 430f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("7ae32bbe-a7bd-40a4-90fa-e037d530f004"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 435f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("d8fa5e63-936f-4e2a-afb6-123b1def0551"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 440f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("8a85a86f-8aac-4573-89f3-6bca057be6c6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 445f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("e0a7faca-bfb1-4882-be25-9025608e12da"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 450f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("b89b05f6-ac7e-4fc8-a4c4-c3caeacce74a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 455f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("51f6e3aa-306a-46b0-8df2-5f1224fa7055"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 460f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("0a8e437e-1ef9-430f-9ad8-994ae5ea9fcf"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 465f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("4f0aa66f-df86-4bd5-9406-a37ac7054e1c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 470f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("7afc7091-1d78-4152-86be-53007538b2f1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 475f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("3ebe42d7-fb7c-41ff-bc2d-63f64811aafe"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 480f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("22140d47-1d3c-410b-94e6-7b954c35c5ed"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 485f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("c307ee7b-9948-4eaf-a7bc-cce477a36a76"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 490f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("7ff9506b-8eb3-46a2-80fb-6910ec0d3096"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 495f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("3521d1c2-27a3-4e62-b440-7e64e036d3c2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 500f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("dd6faa87-024c-49c3-985e-489092d18927"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 505f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("5c404af2-4b11-464c-aa1b-44dddcbb34d3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 510f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("911b2dd8-1419-40b0-8470-7f4be46ff33d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 515f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("2d9c5d32-baea-4338-b32b-5746b099dbf7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 520f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("ab5a8895-8396-4e62-9d43-961ad835e6fc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 525f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("9b034620-97d2-49ec-a89f-84dfd7163692"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 530f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("85efadb1-8b3f-48d0-bde2-647bb49b90ea"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 535f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("478f0902-919d-47e0-89ba-6898eb09d60e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 540f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("97f7c490-4252-4bcb-afb1-0f65e3d89476"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 545f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00010",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00020",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00030",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00040",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00050",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00060",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00070",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00080",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00090",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00011",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00021",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00031",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00041",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00051",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00061",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00071",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00081",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00091",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00012",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00022",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00032",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00042",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00052",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00062",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00072",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00082",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00092",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00013",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00023",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00033",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00043",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00053",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00063",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00073",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00083",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00093",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00014",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00024",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00034",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00044",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00054",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00064",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00074",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00084",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00094",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00015",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00025",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00035",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00045",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00055",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00065",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00075",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00085",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00095",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00016",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00026",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00036",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00046",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00056",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00066",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00076",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00086",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00096",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00017",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00027",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00037",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00047",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00057",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00067",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00077",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00087",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00097",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00018",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00028",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00038",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00048",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00058",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00068",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00078",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00088",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00098",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00019",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00029",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00039",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00049",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00059",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00069",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00079",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00089",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00099",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            AxCode = "LH-10000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 0",
                            Name = "Small",
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59"),
                            AxCode = "LH-10001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 1",
                            Name = "Small",
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59"),
                            AxCode = "LH-10002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 2",
                            Name = "Small",
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59"),
                            AxCode = "LH-10003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 3",
                            Name = "Small",
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59"),
                            AxCode = "LH-10004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 4",
                            Name = "Small",
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59"),
                            AxCode = "LH-10005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 5",
                            Name = "Small",
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59"),
                            AxCode = "LH-10006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 6",
                            Name = "Small",
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59"),
                            AxCode = "LH-10007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 7",
                            Name = "Small",
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59"),
                            AxCode = "LH-10008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 8",
                            Name = "Small",
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-10009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 9",
                            Name = "Small",
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("BaseProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaseProductQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxPromoQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PromoProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("PromoProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PromoProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromoProductId");

                    b.HasIndex("RouteId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ResourceFiles");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("ReturnReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReturnOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c96"),
                            Discount = 10f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            Quantity = 10f,
                            ReturnReason = "Expired"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074260"),
                            AxCode = "RH-00000",
                            Description = "Route0 has 10 stops",
                            IsActive = true,
                            Name = "Route0",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074261"),
                            AxCode = "RH-00001",
                            Description = "Route1 has 10 stops",
                            IsActive = true,
                            Name = "Route1",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074262"),
                            AxCode = "RH-00002",
                            Description = "Route2 has 10 stops",
                            IsActive = true,
                            Name = "Route2",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074263"),
                            AxCode = "RH-00003",
                            Description = "Route3 has 10 stops",
                            IsActive = true,
                            Name = "Route3",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074264"),
                            AxCode = "RH-00004",
                            Description = "Route4 has 10 stops",
                            IsActive = true,
                            Name = "Route4",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074265"),
                            AxCode = "RH-00005",
                            Description = "Route5 has 10 stops",
                            IsActive = true,
                            Name = "Route5",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074266"),
                            AxCode = "RH-00006",
                            Description = "Route6 has 10 stops",
                            IsActive = true,
                            Name = "Route6",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074267"),
                            AxCode = "RH-00007",
                            Description = "Route7 has 10 stops",
                            IsActive = true,
                            Name = "Route7",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074268"),
                            AxCode = "RH-00008",
                            Description = "Route8 has 10 stops",
                            IsActive = true,
                            Name = "Route8",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074269"),
                            AxCode = "RH-00009",
                            Description = "Route9 has 10 stops",
                            IsActive = true,
                            Name = "Route9",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            AxCode = "RH-00011",
                            Description = "Route for Order seeding",
                            IsActive = true,
                            Name = "OrderRoute",
                            SyncedAt = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FromWarehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RouteId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TransferStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0"),
                            AXCode = "AX-Code0",
                            Model = "Model0",
                            Type = "Type0",
                            VehicleNumber = "LHR-0000"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e1"),
                            AXCode = "AX-Code1",
                            Model = "Model1",
                            Type = "Type1",
                            VehicleNumber = "LHR-0001"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e2"),
                            AXCode = "AX-Code2",
                            Model = "Model2",
                            Type = "Type2",
                            VehicleNumber = "LHR-0002"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("Discount")
                        .HasColumnType("float");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("WasteReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("WasteOrders");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.TransferStock", "TransferStock")
                        .WithMany("AssignStocks")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("SalesPersons")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Routes")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfilePicture")
                        .WithOne("ImageCustomer")
                        .HasForeignKey("ReadyGo.Domain.Entities.Customer", "PictureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Customers")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ProfilePicture");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.DeliveryReport", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Discounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Discounts")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfileImage")
                        .WithOne("ImageUser")
                        .HasForeignKey("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ProfileImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProfileImage");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChangedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("NotificationSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Payment", "Payment")
                        .WithOne("Order")
                        .HasForeignKey("ReadyGo.Domain.Entities.Order", "PaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Orders")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Payments")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "VariantOf")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Image");

                    b.Navigation("VariantOf");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Promotions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "PromoProduct")
                        .WithMany()
                        .HasForeignKey("PromoProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Promotions")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BaseProduct");

                    b.Navigation("Customer");

                    b.Navigation("PromoProduct");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("ReturnOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Route");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Notification", "Notification")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("WasteOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("NotificationSettings");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReturnOrders");

                    b.Navigation("WasteOrders");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Prices");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Navigation("ImageCustomer");

                    b.Navigation("ImageUser");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discounts");

                    b.Navigation("Promotions");

                    b.Navigation("SalesPersons");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Navigation("AssignStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}

// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyGo.Persistence;

namespace ReadyGo.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211221102501_ReturnOrderDiscount")]
    partial class ReturnOrderDiscount
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransferId");

                    b.ToTable("AssignStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("TemporaryAssignedTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("AssignedRoute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c93"),
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Name = "Category0",
                            Position = 0
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Name = "Category1",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Name = "Category2",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Name = "Category3",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Name = "Category4",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Name = "Category5",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Name = "Category6",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Name = "Category7",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Name = "Category8",
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Name = "Category9",
                            Position = 9
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df802ea6-ffec-45b1-85e0-a6dd74c8bea4"),
                            ConfigKey = "Sales Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("26c69ac9-68cd-4f80-83a8-979770f3a826"),
                            ConfigKey = "Sales Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("64f495e3-8fa4-498e-b825-f8df85857e76"),
                            ConfigKey = "Sales Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("300a3996-9801-4e9d-9fb3-048ac824589f"),
                            ConfigKey = "Marketing Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("823f8343-acfc-4bf2-90de-6ec2d4bbf427"),
                            ConfigKey = "Marketing Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("e1a248ed-6925-4252-95c5-a97982987508"),
                            ConfigKey = "Marketing Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("6d8f467b-a509-4556-b6c3-3327e1782709"),
                            ConfigKey = "SalesManager_DiscountThrashHold",
                            Value = "5"
                        },
                        new
                        {
                            Id = new Guid("2581015c-adb0-4a25-932e-89c9807903a3"),
                            ConfigKey = "MarketingManager_DiscountThrashHold",
                            Value = "10"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.HasIndex("RouteId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Address1 = "KarachiKarachi",
                            Balance = 0.0,
                            City = "Karachi",
                            CreatedAt = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Email = "order@customer.com",
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "Customer",
                            PhoneNumber = "1234567890",
                            Province = "Karachi",
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductID");

                    b.HasIndex("RouteId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.EmailSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MailConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnableSSL = true,
                            SmtpEmailAddress = "Lighthousetestmail@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "ReadyGoWebApp1",
                            SmtpPort = 587
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            ConcurrencyStamp = "5230260e-818e-4f87-b669-eacbfba4fdc6",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "1570902e-48bb-4b03-850c-8ebd63261e33",
                            ConcurrencyStamp = "8e08f5b1-b001-4544-b3a3-03fa184ac3ef",
                            Name = "Marketing Manager",
                            NormalizedName = "Marketing Manager"
                        },
                        new
                        {
                            Id = "4ce95b9b-0760-4f11-b576-71dfaa053e74",
                            ConcurrencyStamp = "21f6feaa-7ded-4f4b-bddb-d48d1d7caea4",
                            Name = "Sales Manager",
                            NormalizedName = "Sales Manager"
                        },
                        new
                        {
                            Id = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            ConcurrencyStamp = "398cadb3-25b4-43fd-abc7-cd283de1bc1a",
                            Name = "Sales Person",
                            NormalizedName = "Sales Person"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("InviteTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileImageId")
                        .IsUnique()
                        .HasFilter("[ProfileImageId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "569411c1-88ef-45b6-ab57-79665fbcd9a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "87b9caff-c020-483a-a6b1-fca247af3da5",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Super",
                            IsActive = true,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBLjouNqaeiVWbN0TbXUS3+ChW3d7aQIk/BQEkWBxlrdRRngp14b0BIH0Rp65qD6mA==",
                            PhoneNumberConfirmed = true,
                            RoleId = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            SecurityStamp = "f0bee7eb-7a75-4668-8cdc-370ad2ee44f3",
                            TwoFactorEnabled = false,
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = "0daec62b-312f-4016-9c5e-a15354259c90",
                            AccessFailedCount = 0,
                            Address1 = "LahoreLahore",
                            City = "Lahore",
                            ConcurrencyStamp = "0173c380-3f9a-4d61-a1a7-83f6adb4ce78",
                            Email = "order@sp.com",
                            EmailConfirmed = true,
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "SalesPerson",
                            LockoutEnabled = false,
                            PhoneNumber = "0900786012",
                            PhoneNumberConfirmed = false,
                            Province = "lahore",
                            RoleId = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            SecurityStamp = "86afb868-1a6c-4abb-992b-d478d3be9908",
                            TwoFactorEnabled = false,
                            UserName = "order@sp.com"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.ToTable("LogInformation");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByid");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BalanceUsed")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            BalanceUsed = 0f,
                            CreatedAt = new DateTime(2021, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Discount = 0f,
                            IsMarked = false,
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Total = 0.0,
                            VehicleId = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c97"),
                            Discount = 0f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentBalance")
                        .HasColumnType("float");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double>("NewBalance")
                        .HasColumnType("float");

                    b.Property<string>("PaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentReceived")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a0"),
                            CurrentBalance = 1000.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = false,
                            NewBalance = 500.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        },
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a1"),
                            CurrentBalance = 500.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = true,
                            NewBalance = 0.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceHistory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("15921d10-25ed-4fe5-b00f-87d423596bc6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("59368908-e178-4f8c-8a0c-65980846a6e9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("371f7757-5c17-4304-8398-c4b89fdbac93"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("2380e2b5-2c99-49b9-a17d-79ec4c2c6ce2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("2679984a-daad-46fe-b719-082794698bb0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("f22998c3-2ca2-4ba6-9dfd-6cc651c61cf8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 25f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("54cb21a2-8ade-4a6d-ad7c-cad150fbfadf"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("e4fa22a9-8340-4b74-8256-da9e10e673c3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 35f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("7b099b8a-0991-4a83-80ff-a339e3c95114"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 40f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("6e8de7aa-0bbf-4df6-8f25-3c4765a64c08"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 45f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("78fe9732-6bec-40c4-a068-c55161917d3c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("d2a06cdd-bc16-4bf8-a4df-f8cd6b69ba1f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 55f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("6b4c95f4-737e-44b3-88e6-647e2e46ace4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("54628058-7641-415d-af4d-56f2f220b369"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 65f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("83a660f0-24aa-453d-87fb-faba81b88635"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 70f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("81641a8c-2da8-4b3d-8ab2-e1246a90a15e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 75f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("cdd02182-0c36-4b5c-829b-0f3991c016d2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("fbd24376-4251-4f6a-ac61-fd3964d834e4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 85f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("e644ae7a-bb69-4d63-8b95-8681760aa528"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 90f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("04c7d261-b39f-4cbd-9e46-607fa913124c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 95f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("081a61be-e8b0-423d-80ac-5eaf1e923c45"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 100f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("8095772e-e9ac-46e9-912f-d7f6bdfb28ab"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 105f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("2581cc21-548d-483d-82f2-376deffa0aaa"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 110f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("84d69438-32be-4e4d-87e5-fa3a402f2e7a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 115f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("ee6ff131-a658-48a8-9cbe-0a857b5c1add"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 120f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("22779f5a-fa14-4c91-88da-37a2ff8fc275"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 125f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("759117af-c72a-4c0d-9227-560f3e99f209"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 130f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("87fa5ee0-2d44-4646-a773-e90711ed59b0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 135f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("f70df0b1-0662-4cf6-9069-742407e626c0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 140f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("4533aca2-4704-4d8a-a786-ee01012fffc5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 145f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("2bd10a74-5d05-4721-97f2-2207c9a8a7f4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 150f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("4566839e-ddf5-4e57-b385-d6337262ddcc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 155f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("d6a7b92f-660b-4ca6-bc60-2e93ade63d1d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 160f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("f99a0698-3639-4797-9ac8-e5d023d885e6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 165f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("c8a1e9ac-d451-4d92-9a5b-9f0d928831ce"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 170f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("defb30a7-f830-4fd5-86d7-8e4331a0352c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 175f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("972bc8f7-5bba-41bd-b0ab-bc5b4d6047ca"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 180f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("b9971625-2392-440b-9479-6908b5dc903c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 185f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("6145398b-94fc-4cb5-b8f8-eb63d42b5095"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 190f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("4519fab3-bf47-41a7-af2e-cc95414f015e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 195f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("d9e043a9-884b-4096-b504-81e916df74e8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 200f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("a9b0761a-c2e9-464f-8a9f-d3289605c75a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 205f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("5ce8dd9b-d2e5-4a3e-82d0-4f28707336b0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 210f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("0c8a18e1-6caf-4351-819d-c1f7a26827bf"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 215f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("9b678bf5-85dc-49d3-b7a5-7a012dee4ae0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 220f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("2322f15c-f707-4fda-abdf-7ac7a6724cae"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 225f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("d34a0052-6f4c-4a76-9e39-b57cb9efa92e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 230f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("d80b9fba-eefe-42c2-b21f-a1fed305550f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 235f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("e0bd4af1-347e-4ed7-838b-d7e219bc59b7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 240f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("8ca360fa-e3f1-429e-a524-2ae9354ea085"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 245f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("b3b66757-b731-4cba-98d5-cb66a77a6370"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 250f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("3c751881-05f9-4c8a-91c5-c0f2dd373fc6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 255f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("791e5292-fb92-4ee6-b526-195e3d27c7b9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 260f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("69871db0-0a54-4147-87dd-fbbcbe988b90"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 265f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("3d70e228-13b6-4773-a414-d5156dca4179"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 270f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("879934b0-1290-4132-9754-2caabadd8856"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 275f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("3ebb67d5-bc34-4808-a49d-fcde3a65877c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 280f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("798fbdd1-6298-431e-863a-426c94aeee94"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 285f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("3a64148e-3cb5-4832-a27d-9d84ed5f21fe"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 290f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("d40cedc1-958a-49ab-a48a-650984251b87"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 295f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("9802d076-87f9-417d-aeed-04ef05873fb7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 300f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("051ea13b-01f7-4b24-b3f5-37cc3077ca2f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 305f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("5d234299-5fd7-4cc3-b0b0-0ca078b7f603"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 310f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("eff99b64-2fae-4000-8bf6-69f960755ce8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 315f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("bd5ff203-12c6-47d6-bfe4-d9dde5da1f2b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 320f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("56fd54e9-374b-47f9-a466-a159bc542402"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 325f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("51c74141-465d-446b-a9a2-47ad45834c09"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 330f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("158d9c51-579f-4469-96d5-55808e952e6a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 335f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("47b54a5b-7515-4313-aeb6-1d8763c88490"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 340f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("a1ec450d-37b0-4ace-ad07-df3a0c544729"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 345f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("fb827d61-0646-433f-91f3-c8b0bcdc56fb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 350f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("2e1a9932-6c02-423f-be93-456cb9ce2ed2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 355f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("b410977e-e450-4ec6-8cc6-60df1c86d3df"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 360f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("08827942-b9d4-4183-aa02-50238f14f58f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 365f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("1106b74f-5d6d-4ff5-abbd-a9f0668af0ed"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 370f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("f55e039d-4e38-42d2-b15a-e8f7fcda40f3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 375f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("6de94ac0-ab31-4cb7-8a6f-085b85f658ca"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 380f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("e2adaadf-8362-4a39-9837-743871ddf99d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 385f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("3347508d-fd00-4f3f-b759-5811cfaddaed"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 390f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("47809302-49bc-489c-a2bc-ee67061615db"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 395f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("6eb73733-836c-4bbb-91a2-1bca21db239a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 400f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("55dca3a5-fcde-436a-a4f6-4df8a332d771"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 405f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("74f17ff8-93cc-4f71-8d27-234061d2a0f5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 410f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("d2a556df-76ea-4963-a6c1-ddcb636acec3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 415f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("5b6166c3-bf86-42f8-a04b-62890bc358d3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 420f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("55a6f512-1e41-4ab1-bb25-f55ea41a677b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 425f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("daf13230-8b19-4d05-b987-51b04b469870"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 430f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("7ff8a541-44cd-4f6c-b660-c9d93a792d3f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 435f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("2a7b78ae-3c98-4871-beea-4091502d0967"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 440f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("98332606-6270-45b0-b77b-160e2bd59ff1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 445f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("334236ca-db23-45ee-86bc-a143879edab1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 450f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("84956369-466a-4178-bee7-e3d1c5e63eb3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 455f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("9903c727-31f6-4441-aed4-61a11b5994bd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 460f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("70e62480-108b-4b62-a917-ce642c7b3d84"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 465f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("90950938-2950-4773-8a4f-cb22d567ffc6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 470f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("9bce0e74-f162-4773-bd51-db406a335d8e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 475f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("4d722340-9ea0-43c4-9795-3f600aabd096"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 480f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("2ee8a9d3-0b44-4521-9089-2eea3e237583"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 485f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("899ecc00-2b8b-4858-8c68-3f1ffee0b7f6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 490f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("8bea851f-501b-4eed-91d6-f37af302a46c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 495f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("d866cc11-4ef0-495c-873e-3f6b2550ebdd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 500f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("5331ced4-2f4e-4bcd-9f5e-cd726f40e051"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 505f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("a4395afa-c9fa-4581-8ebc-7b6f8a3b78b0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 510f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("95fa06bd-d1aa-4f72-904a-aee60f85f772"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 515f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("01a4c3f0-1059-4e9b-a8c2-464d3dd4b209"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 520f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("6578579b-640a-4534-9cd1-386e1fea2677"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 525f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("41b5a04f-3ed5-4c69-874e-7e2e691df16d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 530f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("4dee1a8d-43b9-41fc-bd72-1ba1a59daf95"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 535f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("29e7053f-2d78-46e4-8296-d4e24d5e8651"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 540f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("8c7ba644-1442-4b18-9f25-b948222bb009"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 545f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00010",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00020",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00030",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00040",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00050",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00060",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00070",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00080",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00090",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00011",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00021",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00031",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00041",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00051",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00061",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00071",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00081",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00091",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00012",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00022",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00032",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00042",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00052",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00062",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00072",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00082",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00092",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00013",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00023",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00033",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00043",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00053",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00063",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00073",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00083",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00093",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00014",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00024",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00034",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00044",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00054",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00064",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00074",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00084",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00094",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00015",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00025",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00035",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00045",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00055",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00065",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00075",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00085",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00095",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00016",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00026",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00036",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00046",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00056",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00066",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00076",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00086",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00096",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00017",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00027",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00037",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00047",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00057",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00067",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00077",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00087",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00097",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00018",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00028",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00038",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00048",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00058",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00068",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00078",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00088",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00098",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00019",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00029",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00039",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00049",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00059",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00069",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00079",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00089",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00099",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            AxCode = "LH-10000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 0",
                            Name = "Small",
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59"),
                            AxCode = "LH-10001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 1",
                            Name = "Small",
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59"),
                            AxCode = "LH-10002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 2",
                            Name = "Small",
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59"),
                            AxCode = "LH-10003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 3",
                            Name = "Small",
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59"),
                            AxCode = "LH-10004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 4",
                            Name = "Small",
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59"),
                            AxCode = "LH-10005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 5",
                            Name = "Small",
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59"),
                            AxCode = "LH-10006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 6",
                            Name = "Small",
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59"),
                            AxCode = "LH-10007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 7",
                            Name = "Small",
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59"),
                            AxCode = "LH-10008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 8",
                            Name = "Small",
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-10009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 9",
                            Name = "Small",
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("BaseProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaseProductQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxPromoQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PromoProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("PromoProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PromoProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromoProductId");

                    b.HasIndex("RouteId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ResourceFiles");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("ReturnReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReturnOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c96"),
                            Discount = 10f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            Quantity = 10f,
                            ReturnReason = "Expired"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074260"),
                            AxCode = "RH-00000",
                            Description = "Route0 has 10 stops",
                            IsActive = true,
                            Name = "Route0",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074261"),
                            AxCode = "RH-00001",
                            Description = "Route1 has 10 stops",
                            IsActive = true,
                            Name = "Route1",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074262"),
                            AxCode = "RH-00002",
                            Description = "Route2 has 10 stops",
                            IsActive = true,
                            Name = "Route2",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074263"),
                            AxCode = "RH-00003",
                            Description = "Route3 has 10 stops",
                            IsActive = true,
                            Name = "Route3",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074264"),
                            AxCode = "RH-00004",
                            Description = "Route4 has 10 stops",
                            IsActive = true,
                            Name = "Route4",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074265"),
                            AxCode = "RH-00005",
                            Description = "Route5 has 10 stops",
                            IsActive = true,
                            Name = "Route5",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074266"),
                            AxCode = "RH-00006",
                            Description = "Route6 has 10 stops",
                            IsActive = true,
                            Name = "Route6",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074267"),
                            AxCode = "RH-00007",
                            Description = "Route7 has 10 stops",
                            IsActive = true,
                            Name = "Route7",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074268"),
                            AxCode = "RH-00008",
                            Description = "Route8 has 10 stops",
                            IsActive = true,
                            Name = "Route8",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074269"),
                            AxCode = "RH-00009",
                            Description = "Route9 has 10 stops",
                            IsActive = true,
                            Name = "Route9",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            AxCode = "RH-00011",
                            Description = "Route for Order seeding",
                            IsActive = true,
                            Name = "OrderRoute",
                            SyncedAt = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromWarehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TransferStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0"),
                            AXCode = "AX-Code0",
                            DriverName = "Driver0",
                            Model = "Model0",
                            Type = "Type0",
                            VehicleNumber = "LHR-0000"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e1"),
                            AXCode = "AX-Code1",
                            DriverName = "Driver1",
                            Model = "Model1",
                            Type = "Type1",
                            VehicleNumber = "LHR-0001"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e2"),
                            AXCode = "AX-Code2",
                            DriverName = "Driver2",
                            Model = "Model2",
                            Type = "Type2",
                            VehicleNumber = "LHR-0002"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("WasteReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("WasteOrders");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.TransferStock", "TransferStock")
                        .WithMany("AssignStocks")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("SalesPersons")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Routes")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfilePicture")
                        .WithOne("ImageCustomer")
                        .HasForeignKey("ReadyGo.Domain.Entities.Customer", "PictureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Customers")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ProfilePicture");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Discounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Discounts")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfileImage")
                        .WithOne("ImageUser")
                        .HasForeignKey("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ProfileImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProfileImage");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChangedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("NotificationSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Payment", "Payment")
                        .WithOne("Order")
                        .HasForeignKey("ReadyGo.Domain.Entities.Order", "PaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Orders")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Payments")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Payments")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "VariantOf")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Image");

                    b.Navigation("VariantOf");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Promotions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "PromoProduct")
                        .WithMany()
                        .HasForeignKey("PromoProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Promotions")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BaseProduct");

                    b.Navigation("Customer");

                    b.Navigation("PromoProduct");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("ReturnOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Notification", "Notification")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("WasteOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("NotificationSettings");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReturnOrders");

                    b.Navigation("WasteOrders");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Prices");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Navigation("ImageCustomer");

                    b.Navigation("ImageUser");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discounts");

                    b.Navigation("Promotions");

                    b.Navigation("SalesPersons");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Navigation("AssignStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}

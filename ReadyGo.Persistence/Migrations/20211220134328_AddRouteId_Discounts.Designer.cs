// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ReadyGo.Persistence;

namespace ReadyGo.Persistence.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20211220134328_AddRouteId_Discounts")]
    partial class AddRouteId_Discounts
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("UserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("UserTokens");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<Guid>("TransferId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("TransferId");

                    b.ToTable("AssignStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("TemporaryAssignedTill")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("AssignedRoute");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c93"),
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Name = "Category0",
                            Position = 0
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Name = "Category1",
                            Position = 1
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Name = "Category2",
                            Position = 2
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Name = "Category3",
                            Position = 3
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Name = "Category4",
                            Position = 4
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Name = "Category5",
                            Position = 5
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Name = "Category6",
                            Position = 6
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Name = "Category7",
                            Position = 7
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Name = "Category8",
                            Position = 8
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Name = "Category9",
                            Position = 9
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Configuration", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfigKey")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Configurations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("df802ea6-ffec-45b1-85e0-a6dd74c8bea4"),
                            ConfigKey = "Sales Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("26c69ac9-68cd-4f80-83a8-979770f3a826"),
                            ConfigKey = "Sales Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("64f495e3-8fa4-498e-b825-f8df85857e76"),
                            ConfigKey = "Sales Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("300a3996-9801-4e9d-9fb3-048ac824589f"),
                            ConfigKey = "Marketing Manager_Customer",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("823f8343-acfc-4bf2-90de-6ec2d4bbf427"),
                            ConfigKey = "Marketing Manager_SalesPerson",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("e1a248ed-6925-4252-95c5-a97982987508"),
                            ConfigKey = "Marketing Manager_Stock",
                            Value = "1"
                        },
                        new
                        {
                            Id = new Guid("6d8f467b-a509-4556-b6c3-3327e1782709"),
                            ConfigKey = "SalesManager_DiscountThrashHold",
                            Value = "5"
                        },
                        new
                        {
                            Id = new Guid("2581015c-adb0-4a25-932e-89c9807903a3"),
                            ConfigKey = "MarketingManager_DiscountThrashHold",
                            Value = "10"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Balance")
                        .HasColumnType("float");

                    b.Property<string>("BusinessName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("CreatedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PictureId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("PictureId")
                        .IsUnique()
                        .HasFilter("[PictureId] IS NOT NULL");

                    b.HasIndex("RouteId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Address1 = "KarachiKarachi",
                            Balance = 0.0,
                            City = "Karachi",
                            CreatedAt = new DateTime(2021, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedById = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Email = "order@customer.com",
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "Customer",
                            PhoneNumber = "1234567890",
                            Province = "Karachi",
                            RouteId = new Guid("0daec62b-312f-4016-9c5e-a15354259c92")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPercentage")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProductID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProductID");

                    b.HasIndex("RouteId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.EmailSettings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("EnableSSL")
                        .HasColumnType("bit");

                    b.Property<string>("SmtpEmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpHost")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SmtpPassword")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SmtpPort")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MailConfiguration");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            EnableSSL = true,
                            SmtpEmailAddress = "Lighthousetestmail@gmail.com",
                            SmtpHost = "smtp.gmail.com",
                            SmtpPassword = "ReadyGoWebApp1",
                            SmtpPort = 587
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            ConcurrencyStamp = "f5a05120-e4c5-43c2-816a-131541cac7c2",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "1570902e-48bb-4b03-850c-8ebd63261e33",
                            ConcurrencyStamp = "b0946a6b-3531-4c9e-bfc9-69cc477ad08d",
                            Name = "Marketing Manager",
                            NormalizedName = "Marketing Manager"
                        },
                        new
                        {
                            Id = "4ce95b9b-0760-4f11-b576-71dfaa053e74",
                            ConcurrencyStamp = "2e611baa-a239-4f3e-af45-7d8a4a6e01d1",
                            Name = "Sales Manager",
                            NormalizedName = "Sales Manager"
                        },
                        new
                        {
                            Id = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            ConcurrencyStamp = "7643ceae-b145-438b-90d2-d34358e4fa1c",
                            Name = "Sales Person",
                            NormalizedName = "Sales Person"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Address2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<DateTime?>("InviteTime")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("LastName")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<Guid?>("ProfileImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Province")
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.HasIndex("ProfileImageId")
                        .IsUnique()
                        .HasFilter("[ProfileImageId] IS NOT NULL");

                    b.HasIndex("RoleId");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = "569411c1-88ef-45b6-ab57-79665fbcd9a4",
                            AccessFailedCount = 0,
                            ConcurrencyStamp = "4d05caf5-17db-447b-b3d8-5147299d201c",
                            Email = "superadmin@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Super",
                            IsActive = true,
                            LastName = "Admin",
                            LockoutEnabled = false,
                            NormalizedEmail = "SUPERADMIN@GMAIL.COM",
                            NormalizedUserName = "SUPERADMIN",
                            PasswordHash = "AQAAAAEAACcQAAAAEBLjouNqaeiVWbN0TbXUS3+ChW3d7aQIk/BQEkWBxlrdRRngp14b0BIH0Rp65qD6mA==",
                            PhoneNumberConfirmed = true,
                            RoleId = "f4ea0102-2c6d-453e-8365-cb45c956cc44",
                            SecurityStamp = "103aa3c6-9ccd-4399-8192-f4808e2b1d78",
                            TwoFactorEnabled = false,
                            UserName = "superadmin"
                        },
                        new
                        {
                            Id = "0daec62b-312f-4016-9c5e-a15354259c90",
                            AccessFailedCount = 0,
                            Address1 = "LahoreLahore",
                            City = "Lahore",
                            ConcurrencyStamp = "ba326b7b-7cb8-4c12-8a86-1569f7fececa",
                            Email = "order@sp.com",
                            EmailConfirmed = true,
                            FirstName = "Order",
                            IsActive = true,
                            LastName = "SalesPerson",
                            LockoutEnabled = false,
                            PhoneNumber = "0900786012",
                            PhoneNumberConfirmed = false,
                            Province = "lahore",
                            RoleId = "c057793d-9d0d-4f1d-9fb0-2335480d82e2",
                            SecurityStamp = "e47093bf-1734-40fe-8120-c1ffcd316384",
                            TwoFactorEnabled = false,
                            UserName = "order@sp.com"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Action")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ActionSource")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ChangedById")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Exception")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IPAddress")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ChangedById");

                    b.ToTable("LogInformation");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedByid")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CreatedByid");

                    b.ToTable("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NotificationType")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("NotificationSettings");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("BalanceUsed")
                        .HasColumnType("real");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Latitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Longitude")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OrderCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PaymentId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPersonId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Total")
                        .HasColumnType("float");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PaymentId")
                        .IsUnique()
                        .HasFilter("[PaymentId] IS NOT NULL");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            BalanceUsed = 0f,
                            CreatedAt = new DateTime(2021, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            Discount = 0f,
                            IsMarked = false,
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90",
                            Total = 0.0,
                            VehicleId = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<float>("Discount")
                        .HasColumnType("real");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PromotionId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.HasIndex("PromotionId");

                    b.ToTable("OrderDetails");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c97"),
                            Discount = 0f,
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("CurrentBalance")
                        .HasColumnType("float");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeviceName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsMarked")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<double>("NewBalance")
                        .HasColumnType("float");

                    b.Property<string>("PaymentCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PaymentReceived")
                        .HasColumnType("float");

                    b.Property<DateTime>("ReceivedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("SalesPersonId");

                    b.ToTable("Payments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a0"),
                            CurrentBalance = 1000.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = false,
                            NewBalance = 500.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        },
                        new
                        {
                            Id = new Guid("01bc87ab-42b6-49c6-90e8-3ac066ed18a1"),
                            CurrentBalance = 500.0,
                            CustomerId = new Guid("0daec62b-312f-4016-9c5e-a15354259c91"),
                            IsMarked = true,
                            NewBalance = 0.0,
                            PaymentReceived = 500.0,
                            ReceivedAt = new DateTime(2021, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SalesPersonId = "0daec62b-312f-4016-9c5e-a15354259c90"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("From")
                        .HasColumnType("datetime2");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("PriceHistory");

                    b.HasData(
                        new
                        {
                            Id = new Guid("793b16a2-3b65-44d1-ab87-1c2775701499"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 0f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("db94a8d2-3bb5-4c19-a7bb-7e8caa18cd11"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 5f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("2416705d-889b-4d22-abaa-25cd415e234d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 10f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("c49a8a23-7dff-4811-b309-b51ee3263eeb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 15f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("c8aa9826-4c27-41a5-9dfd-92dde569bd1a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 20f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("1829022e-f64f-454b-85c7-3a97c2812eef"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 25f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("3ac5cd44-3a2e-4f4d-8722-fba07671fe51"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 30f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("cd2ee22b-4e3c-4d9a-9a1b-489fd9cfb534"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 35f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("434314f9-4a43-4b99-843f-0b161fd0e131"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 40f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("c0a787e4-4a75-402b-b6a4-014060567e33"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 45f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50")
                        },
                        new
                        {
                            Id = new Guid("217ee72a-d667-459a-b953-0e0b03ad4113"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 50f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("9c2ca511-0d39-4e4e-b403-dad714301cdb"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 55f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("354a35d6-e7b9-4cfa-88ae-b202d6ed29e9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 60f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("f9df11c4-a8d0-4026-b2e7-c7e7c86f3926"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 65f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("be6f319d-ca6b-4bf8-9ed2-9b3d1df13153"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 70f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("e43a9a46-3f75-4a82-a382-c2552ffbbae8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 75f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("1e955201-c3f1-4e8c-aeb4-5c0b919cfcb0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 80f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("4666ef6b-5a29-4cc6-a89b-950a0f356529"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 85f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("9abebbf8-43b6-4bcb-868c-d1d2bae2c2f7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 90f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("6e2b37ab-3e00-42fa-ad18-6183e5efe9bd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 95f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51")
                        },
                        new
                        {
                            Id = new Guid("f3cea749-9f71-4801-8b6a-c544e198a6d8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 100f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("f5735908-1b30-4837-8661-35092d0b89d6"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 105f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("9b159832-648c-428b-9d6e-71fd796cada0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 110f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("530ca460-d46f-435f-b953-1dd147d7b5e7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 115f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("57ef7ae5-3aed-4654-9a9a-0c218bdb6a3e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 120f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("112995fd-1161-4cc7-824e-3fba2265f971"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 125f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("568b17b9-ef6d-4cd7-81de-a6a39f4a719d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 130f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("cc9ce403-4961-45a5-a2ba-4396a63b1c6d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 135f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("b0e08c91-e0c9-4ad6-a4c9-96421731545c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 140f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("0723e8f0-d335-4fea-b47e-bcb51e33b577"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 145f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52")
                        },
                        new
                        {
                            Id = new Guid("2e202bfa-4bd3-4b67-b043-295d2969d743"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 150f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("adbf26ed-99ac-4d74-80af-05303c43bf08"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 155f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("85eb86e3-ee4b-47a7-b618-9e0a8134aa80"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 160f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("7ac54894-2734-43ba-9835-13d7057f6cdd"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 165f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("941eb151-288a-4b13-bf15-a7f43b6d0876"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 170f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("0a4a5215-4c9d-4a89-99ac-2c8fa95e925e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 175f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("ce2830e1-a183-40ce-aa77-f60010061f7c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 180f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("3a7d40e1-8916-4b72-b91b-40145868a3ef"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 185f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("a801abb2-cd48-401a-9acf-a3c7999cdf51"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 190f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("8e712a62-752f-4c30-b8c7-886947b51e7f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 195f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53")
                        },
                        new
                        {
                            Id = new Guid("b5a03072-138e-447b-a011-2fdc30e6a3fc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 200f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("7f29e49b-56fe-4931-b60a-a0d449234507"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 205f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("9b57f42e-2410-4856-8821-f9e9fe954ebe"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 210f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("74970667-0472-4fb6-8817-c8cbe2cdeb57"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 215f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("42541c36-b01f-4291-b282-c6f90d32bdf2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 220f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("7932fe87-9ecf-4bfb-bb10-505fefc7948c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 225f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("a307e6ca-9179-4d9b-9679-95828384a563"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 230f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("55fa3cd6-bc0f-480a-bb4c-14b9bc060028"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 235f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("347c68f8-80c3-4929-a914-1c66083f517e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 240f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("08b00e67-bee7-4f28-a445-4ab3bc7de37f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 245f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54")
                        },
                        new
                        {
                            Id = new Guid("fa93210b-cc16-40c7-a03a-4356250ab127"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 250f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("54252334-3f9d-4932-bff1-31f12a892d63"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 255f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("afadf6a4-b7e4-431c-8887-c9ae896316db"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 260f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("e4a63713-bf22-4357-b9cb-8a00825139c4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 265f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("7b8d0f80-7b1f-4c9b-95c4-6902c6e969ea"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 270f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("91062103-a31e-4f58-ab2c-2c2729578dd8"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 275f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("9508cba2-4818-45af-a9af-d2ed76341288"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 280f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("a02b32dd-e905-4ee3-82a2-c1c9746e5c46"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 285f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("a94bdfaa-1d0c-414b-aae7-3eb20494c330"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 290f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("062730f6-bdbb-4bf0-83cb-48c268ce28d4"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 295f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55")
                        },
                        new
                        {
                            Id = new Guid("00eb7f8c-5854-47a3-ae33-04c294abbfec"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 300f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("cf6aaa7c-b456-4606-9e1c-19d2dbb12a90"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 305f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("6d460fd9-be37-4841-9ded-dc556fd5d06f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 310f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("8d5043f6-7d1b-43fb-912e-7a888777a3e9"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 315f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("e801ef7a-c414-49ae-bfeb-6380e7e832bc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 320f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("beccd26f-4021-44d9-b28a-5a1e9e43bf66"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 325f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("22dc2f12-a37e-483e-9a2e-2975722e1b77"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 330f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("0ede0c05-11a9-43ee-af9f-aa7acdeee6c3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 335f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("336e309d-07fa-4e55-960a-50eaacc1677f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 340f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("1587ac25-97b7-46f9-bbef-732cea779a39"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 345f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56")
                        },
                        new
                        {
                            Id = new Guid("926e9c7d-e1d1-4388-9ac2-8a42e9a24399"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 350f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("6220f0fc-7682-4668-a988-05eb83450a1d"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 355f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("6fd765df-3447-4433-8625-b8b6fe4f6b27"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 360f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("8b2284ab-9652-41e3-9801-36decfeb5904"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 365f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("dbcc22a8-1636-4c22-8163-3b90a1680e7c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 370f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("a529bb55-f919-4475-aab4-6fedee9e4253"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 375f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("fb0121d7-4fde-46f4-96a6-f7d971cc270f"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 380f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("7e4016b5-e22a-4661-863b-b889a63e9f66"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 385f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("986a8399-1525-4e15-9ada-818722274d2b"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 390f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("40dbcd58-b88f-4c34-9897-36f12c2860e5"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 395f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57")
                        },
                        new
                        {
                            Id = new Guid("d6c17da7-ae17-413b-88d9-9ef2876504e2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 400f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("ded3cab2-78a8-4e3d-87a7-fa223964c6dc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 405f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("8973f653-350d-4ec9-9efe-e890558e69cf"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 410f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("81993684-686d-43a8-b9c3-f921466d491a"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 415f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("b776f342-ed9e-49f3-b15c-58f51ee1a5f3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 420f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("dca99b90-e55e-4d71-8932-2bda18295486"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 425f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("fd2a69c9-1866-4616-ac61-202bfb96d076"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 430f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("efc62ea2-b75e-43b5-ae48-4f796ff0a8f1"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 435f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("3a7dd631-a731-4153-bc0b-89682f013855"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 440f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("8e12c182-0573-4e14-9784-571b36af1cb7"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 445f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58")
                        },
                        new
                        {
                            Id = new Guid("8eb7cc41-85cc-4ad8-a9d9-2194cccee5fe"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 450f,
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("d4b50184-82fd-444d-8d04-d442f6476fb2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 455f,
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("91c921cb-a22b-40b5-968c-556a37033efe"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 460f,
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("161077a5-44cc-4cbc-8c0b-4b3d8bdcab6e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 465f,
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("82117e54-c876-40a5-a106-87a492159850"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 470f,
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("3cfc9b19-7948-40ea-b743-45858b22734c"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 475f,
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("1361de67-50a2-4081-a151-6eaabe779686"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 480f,
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("8929c132-7b29-407d-92fd-74ed02d60abc"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 485f,
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("2b2d679f-c498-494a-8425-3c311fc89fc0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 490f,
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("8d30774a-2025-48f4-ba9c-3a7dce8143be"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 495f,
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("ee6b22cd-54aa-4fc1-b06b-c6a241e27aad"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 500f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("154ddf5a-e1a5-4d27-86ac-351beee11d15"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 505f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("b8a475d7-4617-45bb-bbfc-46a6d93903c3"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 510f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("cfa59692-8a4d-499c-bd01-a680619a3174"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 515f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("9bd15c46-9f4e-4237-9a41-fc29eb4ab0f2"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 520f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("45c3aa6d-9a58-49f9-9f8b-8f081e7fab4e"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 525f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("7cd6d00b-4be1-4832-947f-4986e58b8b74"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 530f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("dac85856-153d-4167-b406-5441723f0db0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 535f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("951ec695-0b7e-487e-b6ca-bb29fe7b1422"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 540f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59")
                        },
                        new
                        {
                            Id = new Guid("1c917ef9-2444-4c0a-9160-f680fbab2fb0"),
                            CreatedAt = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            From = new DateTime(2021, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Price = 545f,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59")
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("ImageId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<Guid?>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ImageId");

                    b.HasIndex("ProductId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00010",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00020",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00030",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00040",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00050",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00060",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00070",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00080",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            AxCode = "LH-00090",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00011",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00021",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00031",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00041",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00051",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00061",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00071",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00081",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            AxCode = "LH-00091",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e51"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00012",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00022",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00032",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00042",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00052",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00062",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00072",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00082",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            AxCode = "LH-00092",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e52"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00013",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00023",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00033",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00043",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00053",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00063",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00073",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00083",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            AxCode = "LH-00093",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e53"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00014",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00024",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00034",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00044",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00054",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00064",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00074",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00084",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            AxCode = "LH-00094",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e54"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00015",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00025",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00035",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00045",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00055",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00065",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00075",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00085",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            AxCode = "LH-00095",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e55"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00016",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00026",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00036",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00046",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00056",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00066",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00076",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00086",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            AxCode = "LH-00096",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e56"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00017",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00027",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00037",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00047",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00057",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00067",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00077",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00087",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            AxCode = "LH-00097",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e57"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00018",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00028",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00038",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00048",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00058",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00068",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00078",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00088",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            AxCode = "LH-00098",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e58"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 0 is a dairy product",
                            Name = "Product 0",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00019",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 1 is a dairy product",
                            Name = "Product 1",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00029",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 2 is a dairy product",
                            Name = "Product 2",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00039",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 3 is a dairy product",
                            Name = "Product 3",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00049",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 4 is a dairy product",
                            Name = "Product 4",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00059",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 5 is a dairy product",
                            Name = "Product 5",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00069",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 6 is a dairy product",
                            Name = "Product 6",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00079",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 7 is a dairy product",
                            Name = "Product 7",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00089",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 8 is a dairy product",
                            Name = "Product 8",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-00099",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e59"),
                            Description = "Product 9 is a dairy product",
                            Name = "Product 9",
                            Quantity = 0f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            AxCode = "LH-10000",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 0",
                            Name = "Small",
                            ProductId = new Guid("0c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f17-7a7a744e2e59"),
                            AxCode = "LH-10001",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 1",
                            Name = "Small",
                            ProductId = new Guid("1c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f27-7a7a744e2e59"),
                            AxCode = "LH-10002",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 2",
                            Name = "Small",
                            ProductId = new Guid("2c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f37-7a7a744e2e59"),
                            AxCode = "LH-10003",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 3",
                            Name = "Small",
                            ProductId = new Guid("3c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f47-7a7a744e2e59"),
                            AxCode = "LH-10004",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 4",
                            Name = "Small",
                            ProductId = new Guid("4c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f57-7a7a744e2e59"),
                            AxCode = "LH-10005",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 5",
                            Name = "Small",
                            ProductId = new Guid("5c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f67-7a7a744e2e59"),
                            AxCode = "LH-10006",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 6",
                            Name = "Small",
                            ProductId = new Guid("6c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f77-7a7a744e2e59"),
                            AxCode = "LH-10007",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 7",
                            Name = "Small",
                            ProductId = new Guid("7c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f87-7a7a744e2e59"),
                            AxCode = "LH-10008",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 8",
                            Name = "Small",
                            ProductId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        },
                        new
                        {
                            Id = new Guid("8c74fc65-b701-4ade-9f97-7a7a744e2e59"),
                            AxCode = "LH-10009",
                            CategoryId = new Guid("8c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Description = "Variant of Product 9",
                            Name = "Small",
                            ProductId = new Guid("9c74fc65-b791-4ade-9f97-7a7a744e2e50"),
                            Quantity = 100f
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BaseProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("BaseProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("BaseProductQuantity")
                        .HasColumnType("int");

                    b.Property<Guid?>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int?>("MaxPromoQuantity")
                        .HasColumnType("int");

                    b.Property<string>("PromoProductCode")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<Guid>("PromoProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("PromoProductQuantity")
                        .HasColumnType("int");

                    b.Property<string>("RouteCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("BaseProductId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("PromoProductId");

                    b.HasIndex("RouteId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<byte[]>("File")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("ResourceFiles");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("ReturnReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("ReturnOrders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c96"),
                            OrderId = new Guid("0daec62b-312f-4016-9c5e-a15354259c95"),
                            Price = 20.0,
                            ProductId = new Guid("8c74fc65-b701-4ade-9f07-7a7a744e2e59"),
                            Quantity = 10f,
                            ReturnReason = "Expired"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AxCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("SyncedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Routes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074260"),
                            AxCode = "RH-00000",
                            Description = "Route0 has 10 stops",
                            IsActive = true,
                            Name = "Route0",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074261"),
                            AxCode = "RH-00001",
                            Description = "Route1 has 10 stops",
                            IsActive = true,
                            Name = "Route1",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074262"),
                            AxCode = "RH-00002",
                            Description = "Route2 has 10 stops",
                            IsActive = true,
                            Name = "Route2",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074263"),
                            AxCode = "RH-00003",
                            Description = "Route3 has 10 stops",
                            IsActive = true,
                            Name = "Route3",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074264"),
                            AxCode = "RH-00004",
                            Description = "Route4 has 10 stops",
                            IsActive = true,
                            Name = "Route4",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074265"),
                            AxCode = "RH-00005",
                            Description = "Route5 has 10 stops",
                            IsActive = true,
                            Name = "Route5",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074266"),
                            AxCode = "RH-00006",
                            Description = "Route6 has 10 stops",
                            IsActive = true,
                            Name = "Route6",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074267"),
                            AxCode = "RH-00007",
                            Description = "Route7 has 10 stops",
                            IsActive = true,
                            Name = "Route7",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074268"),
                            AxCode = "RH-00008",
                            Description = "Route8 has 10 stops",
                            IsActive = true,
                            Name = "Route8",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b3a64fc0-f699-49e5-9198-a7d7f7074269"),
                            AxCode = "RH-00009",
                            Description = "Route9 has 10 stops",
                            IsActive = true,
                            Name = "Route9",
                            SyncedAt = new DateTime(2021, 11, 1, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("0daec62b-312f-4016-9c5e-a15354259c92"),
                            AxCode = "RH-00011",
                            Description = "Route for Order seeding",
                            IsActive = true,
                            Name = "OrderRoute",
                            SyncedAt = new DateTime(2020, 12, 29, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedById")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromWarehouse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("SalesPersonId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<Guid>("VehicleId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CreatedById");

                    b.HasIndex("RouteId");

                    b.HasIndex("SalesPersonId");

                    b.HasIndex("VehicleId");

                    b.ToTable("TransferStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<Guid>("NotificationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("NotificationId");

                    b.HasIndex("UserId");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AXCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VehicleNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e0"),
                            AXCode = "AX-Code0",
                            DriverName = "Driver0",
                            Model = "Model0",
                            Type = "Type0",
                            VehicleNumber = "LHR-0000"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e1"),
                            AXCode = "AX-Code1",
                            DriverName = "Driver1",
                            Model = "Model1",
                            Type = "Type1",
                            VehicleNumber = "LHR-0001"
                        },
                        new
                        {
                            Id = new Guid("c7be1d28-2b81-42e9-90e9-5396492a90e2"),
                            AXCode = "AX-Code2",
                            DriverName = "Driver2",
                            Model = "Model2",
                            Type = "Type2",
                            VehicleNumber = "LHR-0002"
                        });
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("OrderId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<Guid>("ProductId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("Quantity")
                        .HasColumnType("real");

                    b.Property<int?>("Reason")
                        .HasColumnType("int");

                    b.Property<string>("WasteReason")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("WasteOrders");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.TransferStock", "TransferStock")
                        .WithMany("AssignStocks")
                        .HasForeignKey("TransferId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("TransferStock");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.AssignedRoute", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("SalesPersons")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Routes")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfilePicture")
                        .WithOne("ImageCustomer")
                        .HasForeignKey("ReadyGo.Domain.Entities.Customer", "PictureId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Customers")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");

                    b.Navigation("ProfilePicture");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Discount", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Discounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Discounts")
                        .HasForeignKey("ProductID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Discounts")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Customer");

                    b.Navigation("Product");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "ProfileImage")
                        .WithOne("ImageUser")
                        .HasForeignKey("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ProfileImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationRole", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ProfileImage");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.LogInformation", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "ChangedBy")
                        .WithMany()
                        .HasForeignKey("ChangedById")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ChangedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedByid")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("CreatedBy");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.NotificationSettings", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("NotificationSettings")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Payment", "Payment")
                        .WithOne("Order")
                        .HasForeignKey("ReadyGo.Domain.Entities.Order", "PaymentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Orders")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany("Orders")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Payment");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("Orders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Promotion", "Promotion")
                        .WithMany()
                        .HasForeignKey("PromotionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Order");

                    b.Navigation("Product");

                    b.Navigation("Promotion");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany("Payments")
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("SalesPerson");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.PriceHistory", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany("Prices")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.ResourceFile", "Image")
                        .WithMany()
                        .HasForeignKey("ImageId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "VariantOf")
                        .WithMany("Variants")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Category");

                    b.Navigation("Image");

                    b.Navigation("VariantOf");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Promotion", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Product", "BaseProduct")
                        .WithMany()
                        .HasForeignKey("BaseProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Customer", "Customer")
                        .WithMany("Promotions")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("ReadyGo.Domain.Entities.Product", "PromoProduct")
                        .WithMany()
                        .HasForeignKey("PromoProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany("Promotions")
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("BaseProduct");

                    b.Navigation("Customer");

                    b.Navigation("PromoProduct");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ReturnOrder", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("ReturnOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "CreatedBy")
                        .WithMany()
                        .HasForeignKey("CreatedById")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Route", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "SalesPerson")
                        .WithMany()
                        .HasForeignKey("SalesPersonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Vehicle", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CreatedBy");

                    b.Navigation("Route");

                    b.Navigation("SalesPerson");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.UserNotification", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Notification", "Notification")
                        .WithMany("Notifications")
                        .HasForeignKey("NotificationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Identity.ApplicationUser", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Notification");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.WasteOrders", b =>
                {
                    b.HasOne("ReadyGo.Domain.Entities.Order", "Order")
                        .WithMany("WasteOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("ReadyGo.Domain.Entities.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Customer", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Orders");

                    b.Navigation("Promotions");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Identity.ApplicationUser", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("NotificationSettings");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Notification", b =>
                {
                    b.Navigation("Notifications");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Order", b =>
                {
                    b.Navigation("Orders");

                    b.Navigation("ReturnOrders");

                    b.Navigation("WasteOrders");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Payment", b =>
                {
                    b.Navigation("Order");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Product", b =>
                {
                    b.Navigation("Discounts");

                    b.Navigation("Prices");

                    b.Navigation("Variants");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.ResourceFile", b =>
                {
                    b.Navigation("ImageCustomer");

                    b.Navigation("ImageUser");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Route", b =>
                {
                    b.Navigation("Customers");

                    b.Navigation("Discounts");

                    b.Navigation("Promotions");

                    b.Navigation("SalesPersons");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.TransferStock", b =>
                {
                    b.Navigation("AssignStocks");
                });

            modelBuilder.Entity("ReadyGo.Domain.Entities.Vehicle", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}

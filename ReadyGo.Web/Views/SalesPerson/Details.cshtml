@model ReadyGo.Domain.Entities.ViewModels.SpDetailsPageModel;
@{
    ViewData["Title"] = "Salesperson Details";
    var id = Model.Id;
}
@section Styles{
<link href="~/css/DataTableStyle.min.css" rel="stylesheet" />
}
<div class="clearfix"> </div>

<div class="row">
    <div class="col-md-12 col-sm-12">
        <div class="x_panel">
            <div class="x_title">
                <div class="row">
                    <div class="col-md-9">
                        <h2> <a onclick='window.location.href = "@Url.Action("Index", "SalesPerson")";'> <i class="fa fa-angle-left font-weight-bold" style="font-size:22px"> </i> </a> @ViewData["Title"] (@Model.FullName)</h2>
                    </div>
                    @*<div class="col-md-3 submit-btn" style="padding:0px">
                        <input class='form-control custom-search' placeholder='Type and press enter to search' />
                        </div>*@
                </div>
            </div>
            <div class="x_content">
                <div class="row">
                    <nav class="col-md-12" style="padding:inherit">
                        <div class="nav nav-tabs" id="nav-tab" role="tablist">
                            <a class="nav-item nav-link active" id="nav-order-tab" data-toggle="tab" href="#nav-order" role="tab" aria-controls="nav-order" aria-selected="true"> <h2> Order Overview</h2> </a>
                            <a class="nav-item nav-link" id="nav-payment-tab" data-toggle="tab" href="#nav-payment" role="tab" aria-controls="nav-payment" aria-selected="false"> <h2> Payment Overview</h2> </a>
                            <a class="nav-item nav-link" id="nav-route-tab" data-toggle="tab" href="#nav-route" role="tab" aria-controls="nav-route" aria-selected="false" onclick="location.reload(true)"> <h2> Route</h2> </a>
                        </div>
                    </nav>
                </div>
                <div class="tab-content" id="nav-tabContent">
                    <div class="tab-pane fade show active table-responsive" id="nav-order" role="tabpanel" aria-labelledby="nav-order-tab">
                        <div class="row">
                            <div class="col-md-9">
                            </div>
                            <div class="col-md-3 submit-btn" style="padding:0px">
                                <input class='form-control custom-search custom-search-orders' type="search" placeholder='Type and press enter to search' />
                            </div>
                        </div>
                        <table id="OrdersTable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Order Code</th>
                                    <th>Salesperson</th>
                                    <th>Business Name</th>
                                    <th>Gross Sale</th>
                                    <th>Inv. Discount</th>
                                    <th>Inv. Discount%</th>
                                    <th>Total Discount</th>
                                    <th>Total Discount%</th>
                                    <th>Return / Waste</th>
                                    <th>Net Sales</th>
                                    <th>Remaining Balance</th>
                                    <th>Created At</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <div class="tab-pane fade table-responsive" id="nav-payment" role="tabpanel" aria-labelledby="nav-payment-tab">
                        <div class="row">
                            <div class="col-md-9">
                            </div>
                            <div class="col-md-3 submit-btn" style="padding:0px">
                                <input class='form-control custom-search custom-search-payments' type="search" placeholder='Type and press enter to search' />
                            </div>
                        </div>
                        <table id="PaymentTable" class="table table-striped table-bordered table-hover">
                            <thead>
                                <tr>
                                    <th>Payment Code</th>
                                    <th>Business Name</th>
                                    <th>Salesperson</th>
                                    <th>Current Balance</th>
                                    <th>Payment Received</th>
                                    <th>Remaining Balance</th>
                                    <th>Created At</th>
                                </tr>
                            </thead>
                            <tbody>
                            </tbody>
                        </table>
                    </div>
                    <div class="tab-pane fade" id="nav-route" role="tabpanel" aria-labelledby="nav-route-tab">
                        <div class="row">
                            <div class="col-md-12">
                                <div id="map" style="width:100%;height:500px;"> </div>
                            </div>
                            <div class="col-md-12 table-responsive">
                                <div class="row">
                                    <div class="col-md-9">
                                    </div>
                                    <div class="col-md-3 submit-btn" style="padding:0px">
                                        <input class='form-control custom-search custom-search-routes' type="search" placeholder='Type and press enter to search' />
                                    </div>
                                </div>
                                <table id="CustomerTable" class="table table-striped table-bordered">
                                    <thead>
                                        <tr>
                                            <th>Serial No.</th>
                                            <th>Business Name</th>
                                            <th>Transaction Types</th>
                                            <th>Coordinates</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section Scripts{
<script src="~/js/DataTableScript.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=default"></script>
<script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAIB3IfoXSHA50wo_WQvLpn-CvGjafm5Cg&libraries=&v=weekly"></script>
<script>
    var key = 'AIzaSyAIB3IfoXSHA50wo_WQvLpn-CvGjafm5Cg';
    let map;
    var directionDisplay;
    var directionsService;
    let lat;
    let long;
    let marker;

    var markers = [];

    function initMap() {

        var myOptions = {
            zoom: 8,
            mapTypeId: google.maps.MapTypeId.ROADMAP,
            center: new google.maps.LatLng(31.582045, 74.329376),
            panControl: true,
            mapTypeControl: false,
            panControlOptions: {
                position: google.maps.ControlPosition.RIGHT_CENTER
            },
            zoomControl: true,
            zoomControlOptions: {
                style: google.maps.ZoomControlStyle.LARGE,
                position: google.maps.ControlPosition.RIGHT_CENTER
            },
            scaleControl: false,
            streetViewControl: false,
            streetViewControlOptions: {
                position: google.maps.ControlPosition.LEFT_CENTER,
            }
        };

        map = new google.maps.Map(document.getElementById("map"), myOptions);
        directionsService = new google.maps.DirectionsService();
        directionsDisplay = new google.maps.DirectionsRenderer({
            preserveViewport: true,
            suppressMarkers: true,
        });


        directionsDisplay.setMap(map);

        const locationButton = document.createElement("button");
        locationButton.type = 'button';
        locationButton.innerHTML = '<i class ="fa fa-map-marker" style="font-size:30px !important"></i>'
        //locationButton.textContent = "Go to Current Location";
        locationButton.classList.add("custom-map-control-button");
        map.controls[google.maps.ControlPosition.RIGHT_CENTER].push(locationButton);
        locationButton.addEventListener("click", () => {
            // Try HTML5 geolocation.
            if (navigator.geolocation) {
                navigator.geolocation.getCurrentPosition(
                    (position) => {
                        const pos = {
                            lat: position.coords.latitude,
                            lng: position.coords.longitude,
                        };
                        map.setCenter(pos);
                    },
                    () => {
                        handleLocationError(true);
                    }
                );
            } else {
                // Browser doesn't support Geolocation
                handleLocationError(false);
            }
        });

        function handleLocationError(browserHasGeolocation) {
            ErrorNotification(browserHasGeolocation ?
                "Please allow location access" :
                "Your browser doesn't support geolocation.");
        }
        calcRoute();
    }

    function calcRoute() {

        var customers = JSON.parse('@Html.Raw(Json.Serialize(Model.Customers))');
         
        var orders = JSON.parse('@Html.Raw(Json.Serialize(Model.Orders))');
        if (orders.length > 1) {
            var waypoints_data = [];
            for (var i = 0; i <= orders.length - 1; i++) {
                var loc = new google.maps.LatLng(parseFloat(orders[i].latitude), parseFloat(orders[i].longitude));
                    waypoints_data.push({ location: loc, stopover: true });
            }


            var request = {
                origin: waypoints_data[0].location,
                destination: waypoints_data[waypoints_data.length - 1].location,
                optimizeWaypoints: true,
                waypoints: waypoints_data.slice(1, waypoints_data.length - 1),
                travelMode: google.maps.DirectionsTravelMode.DRIVING
            };

            directionsService.route(request, function(response, status) {
                var markerCounter = 1;
                if (status == google.maps.DirectionsStatus.OK) {
                    directionsDisplay.setDirections(response);

                    // add custom markers
                    var route = response.routes[0];
                    // start marker
                     var newMarker = addMarker(route.legs[0].start_location, markerCounter++, orders[0], 'red');
                     markers.push(newMarker);
                    // the rest
                    for (var i = 0; i < route.legs.length; i++) {
                         var newMarker = addMarker(route.legs[i].end_location, markerCounter++, orders[i + 1], 'red');
                         markers.push(newMarker);
                    }
                    directionsDisplay.setMap(map);
                } else {
                    //ErrorNotification("Could not place the salesperson's route on the map. Please check the customers co-ordinates");
                    //alert("Directions Request from " + latitudes[0] + " to " + latitudes[latitudes.length - 1] + " failed: " + status);
                }
            });
        } else if (orders.length == 1) {
            var lat = parseFloat(orders[0].latitude);
            var long = parseFloat(orders[0].longitude);
            var newMarker = addMarker(new google.maps.LatLng(lat, long), 1, orders[0], 'red');
            
            markers.push(newMarker);
        }

        if (customers.length > 0) {
            var bounds = new google.maps.LatLngBounds();

            for (var i = 0; i <= customers.length - 1; i++) {
                var lat = parseFloat(customers[i].latitude);
                var long = parseFloat(customers[i].longitude);

                var newMarker = addMarker(new google.maps.LatLng(lat, long), i + 1, customers[i], 'blue');
                markers.push(newMarker);
            }
        }

         for (var i = 0; i < markers.length; i++) {
             markers[i].setVisible(true);

             // extending bounds to contain this visible marker position
             bounds.extend(markers[i].getPosition());
         }

         // setting new bounds to visible markers of 2
         map.fitBounds(bounds);
    }

    function addMarker(position, i, order, color) {
        if (color == 'red') {
            color = '|FF0000|FFFFFF';
        } else {
            color = '|000f5c|FFFFFF'
        }
        const contentString =
            '<div id="content">' +
            '<div id="siteNotice">' +
            "</div>" +
            '<h4 id="firstHeading" class="firstHeading">' + order.fullName + '</h4>' +
            '<div id="bodyContent">' +
            '<p>' + order.address1 + '</p>' +
            "</div>" +
            "</div>";
        const infowindow = new google.maps.InfoWindow({
            content: contentString,
            maxWidth: 200,
        });
        const marker = new google.maps.Marker({
            position: position,
            icon: 'https://chart.apis.google.com/chart?chst=d_map_pin_letter&chld=' + i + color,
            map: map,
        })
        marker.addListener("click", () => {
            infowindow.open({
                anchor: marker,
                map,
                shouldFocus: false,
            });
        });
        return marker;
    }

    $(document).ready(function() {
        window.onpageshow = function(event) {
            if (event.persisted) {
                localStorage.removeItem("activeTabSpOrder");
            }
        };
        $('a[data-toggle="tab"]').on('shown.bs.tab', function(e) {
            localStorage.setItem('activeTabSpOrder', $(e.target).attr('href'));
        });
        var activeTab = localStorage.getItem('activeTabSpOrder');
        if (activeTab) {
            $('#nav-tab a[href="' + activeTab + '"]').tab('show');
        }
        var searchQuery = '';
        var userDataTable = $('#CustomerTable').DataTable({
            dom: "frt<'row'<'col-md-4 col-xs-12'i><'col-md-4 col-xs-12'l><'col-md-4 col-xs-12'p>>",
            serverSide: true,
            pagingType: "simple_numbers",
            processing: true,
            stateSave: false,
            language: {
                processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>Loading...',
                emptyTable: 'No customers available'
            },
            "order": [1, 'asc'],
            lengthMenu: [10, 25, 50, 100, 250, 500],
            filter: true,
            ajax: {
                url: '../SpRouteOrders',
                type: "POST",
                datatype: "json",
                method: 'post',
                data: function(d) {
                    d.id = '@id';
                },
                dataSrc: function(data) {
                    return data.data;
                }
            },
            columns: [{
                    render: function() {
                        return "";
                    }
                },
                {
                    data: 'name'
                },
                {
                    data: 'orders',
                    sortable: false,
                },
                {
                    data: {
                        orderLongitude: 'orderLongitude',
                        orderLatitude: 'orderLatitude',
                        customerLongitude: 'customerLongitude',
                        customerLatitude: 'customerLatitude'
                    },
                    sortable: false,
                    searchable: false,
                    render: function(data) {
                        var customerCoordinates = "";
                        var orderCoordinates = "";
                        var url = "";
                        if (data.customerLatitude != null && data.customerLongitude != null && data.customerLatitude != 0 && data.customerLongitude != 0) {
                            url = "https://www.google.com.sa/maps/search/" + data.customerLatitude + "," + data.customerLongitude + "?hl=en";
                            customerCoordinates = `<a class="custom-link" onclick ="window.open('${url}', '_blank' ); return false" target = '_blank' href='#'> Customer </a>`;

                        }
                        if (data.orderLatitude != null && data.orderLongitude != null && data.orderLatitude != 0 && data.orderLongitude != 0) {
                            url = "https://www.google.com.sa/maps/search/" + data.orderLatitude + "," + data.orderLongitude + "?hl=en";
                            orderCoordinates = `<a class="custom-link" onclick = "window.open('${url}', '_blank' ); return false" target = '_blank' href ="#" > Order </a>`;
                        }
                        if (customerCoordinates != "" && orderCoordinates != "") {
                            return orderCoordinates + " / " + customerCoordinates;
                        } else if (customerCoordinates != "") {
                            return customerCoordinates;
                        } else if (orderCoordinates != "") {
                            return orderCoordinates;
                        } else {
                            return "No coordinates found";
                        }
                    },
                },
            ]
        });
        userDataTable.on('draw.dt', function() {
            var info = userDataTable.page.info();
            userDataTable.column(0, {
                search: 'applied',
                order: 'applied',
                page: 'applied'
            }).nodes().each(function(cell, i) {
                cell.innerHTML = i + 1 + info.start;
            });
        });
        var orderTable = $('#OrdersTable').DataTable({
            dom: "frt<'row'<'col-md-4 col-xs-12'i><'col-md-4 col-xs-12'l><'col-md-4 col-xs-12'p>>",
            serverSide: true,
            pagingType: "simple_numbers",
            processing: true,
            stateSave: false,
            language: {
                processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>Loading...',
                emptyTable: 'No data available'
            },
            "order": [9, 'desc'],
            lengthMenu: [10, 25, 50, 100, 250, 500],
            filter: true,
            ajax: {
                url: '@Url.Action("SPOrders","Order")',
                type: "POST",
                datatype: "json",
                method: 'post',
                data: function(d) {
                    d.id = '@id';
                    d.isMarked = false;
                },
                dataSrc: function(data) {
                    return data.data;
                }
            },
            columns: [{
                    data: {
                        orderCode: 'orderCode'
                    },
                    render: function(data) {
                        if (data.orderCode != null && data.orderCode != '') {
                            return data.orderCode;
                        }
                        return "---";
                    }
                },
                {
                    data: 'salesPersonName'
                },
                {
                    data: 'customerName'
                },
                {
                    data: {
                        gross: 'gross'
                    },
                    render: function(data) {
                        return data.gross.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    searchable: false,
                    className: "text-right",
                },
                {
                    data: {
                        invoiceDiscount: 'invoiceDiscount'
                    },
                    render: function(data) {
                        return data.invoiceDiscount.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    searchable: false,
                    className: "text-right",
                },
                {
                    data: {
                        invoiceDiscountPercentage: 'invoiceDiscountPercentage'
                    },
                    render: function(data) {
                        return data.invoiceDiscountPercentage;
                    },
                    searchable: false,
                    className: "text-right",
                },
                {
                    data: {
                        totalDiscount: 'totalDiscount'
                    },
                    render: function(data) {
                        return data.totalDiscount.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    searchable: false,
                    className: "text-right",
                },

                {
                    data: {
                        totalDiscountPercentage: 'totalDiscountPercentage'
                    },
                    render: function(data) {
                        return data.totalDiscountPercentage;
                    },
                    searchable: false,
                    className: "text-right",
                },
                {
                    data: {
                        waste: 'waste'
                    },
                    render: function(data) {
                        return data.waste.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    searchable: false,
                    className: "text-right",
                },
                {
                    data: {
                        total: 'total'
                    },
                    render: function(data) {
                        return data.total.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    searchable: false,
                    className: "text-right",
                },
                {
                    data: {
                        credit: 'credit'
                    },
                    render: function(data) {
                        return data.credit.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    searchable: false,
                    className: "text-right",
                },
                {
                    data: 'createdAt',
                    render: function(data) {
                        return new Date(data).toLocaleString("en-GB");
                    }
                }
            ],
            createdRow: function(row, data, dataIndex) {
                row.title = "Click to view details."
                $('[data-toggle="tooltip"]', row).tooltip();
            }

        });
        var paymentTable = $("#PaymentTable").DataTable({
            dom: "frt<'row'<'col-md-4 col-xs-12'i><'col-md-4 col-xs-12'l><'col-md-4 col-xs-12'p>>",
            serverSide: true,
            pagingType: "simple_numbers",
            processing: true,
            stateSave: false,
            language: {
                processing: '<i class="fa fa-spinner fa-spin fa-3x fa-fw"></i>Loading...',
                emptyTable: 'No data available'
            },
            "order": [6, 'desc'],
            lengthMenu: [10, 25, 50, 100, 250, 500],
            filter: true,
            ajax: {
                url: '@Url.Action("Payments","Payment")',
                type: "POST",
                datatype: "json",
                method: 'post',
                data: function(d) {
                    d.id = '@id';
                    d.isMarked = false;
                },
                dataSrc: function(data) {
                    return data.data;
                }
            },
            columns: [{
                    data: 'salesPersonName'
                },
                {
                    data: 'customerCode'
                },
                {
                    data: 'customerName'
                },
                {
                    data: {
                        currentBalance: 'currentBalance'
                    },
                    render: function(data) {
                        return data.currentBalance.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    className: "text-right",
                },
                {
                    data: {
                        paymentReceived: 'paymentReceived'
                    },
                    render: function(data) {
                        return data.paymentReceived.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    className: "text-right",
                },
                {
                    data: {
                        newBalance: 'newBalance'
                    },
                    render: function(data) {
                        return data.newBalance.toLocaleString('en-US', {
                            minimumFractionDigits: 2
                        });
                    },
                    className: "text-right",
                },
                {
                    data: 'createdAt',
                    render: function(data) {
                        return new Date(data).toLocaleString("en-GB");
                    }
                }
            ],
            createdRow: function(row, data, dataIndex) {
                row.title = "Click to view details."
                $('[data-toggle="tooltip"]', row).tooltip();
            }
        })

        $('.custom-search-orders').tooltip({
            trigger: 'hover',
            html: true,
            title: `<b>Search by</b>
                            <ul class='tooltip-ul'>
                                <li>Order Code</li>
                                <li>Customer Name</li>
                                <li>Salesperson</li>
                            </ul>`,
            placement: 'left',
            fallbackPlacement: 'flip',
            boundary: 'window',
            template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner text-left"></div></div>'
        });
        $('.custom-search-payments').tooltip({
            trigger: 'hover',
            html: true,
            title: `<b>Search by</b>
                            <ul class='tooltip-ul'>
                                <li>Payment Code</li>
                                <li>Customer Name</li>
                                <li>Salesperson</li>
                            </ul>`,
            placement: 'left',
            fallbackPlacement: 'flip',
            boundary: 'window',
            template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner text-left"></div></div>'
        });
        $('.custom-search-routes').tooltip({
            trigger: 'hover',
            html: true,
            title: `<b>Search by</b>
                            <ul class='tooltip-ul'>
                                <li>Business Name</li>
                            </ul>`,
            placement: 'left',
            fallbackPlacement: 'flip',
            boundary: 'window',
            template: '<div class="tooltip" role="tooltip"><div class="arrow"></div><div class="tooltip-inner text-left"></div></div>'
        });

        //$(".custom-search-orders").val(orderTable.search());
        //$(".custom-search-payments").val(paymentTable.search());
        //$(".custom-search-routes").val(userDataTable.search());

        $(".custom-search-orders").keyup(function(e) {
            if (e.keyCode == 13) {
                searchQuery = $(".custom-search-orders").val();
                orderTable.search(searchQuery).draw();
            }
        });
        $(".custom-search-payments").keyup(function(e) {
            if (e.keyCode == 13) {
                searchQuery = $(".custom-search-payments").val();
                paymentTable.search(searchQuery).draw();
            }
        });
        $(".custom-search-routes").keyup(function(e) {
            if (e.keyCode == 13) {
                searchQuery = $(".custom-search-routes").val();
                userDataTable.search(searchQuery).draw();
            }
        });

        $('#OrdersTable tbody').on('click', 'tr td', function() {
            var data = orderTable.row($(this).parent()).data();
            window.location.href = '@Url.Action("OrderDetails", "Order" , new {id = "ID"})'.replace("ID", data.id);
        });
        $('#PaymentTable tbody').on('click', 'tr td', function() {
            var data = paymentTable.row($(this).parent()).data();
            window.location.href = '@Url.Action("PaymentDetails", "Payment" , new {id = "ID",flag="readonly"})'.replace("ID", data.id);
        });

        initMap();
})
</script>
}